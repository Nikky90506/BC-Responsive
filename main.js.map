{
  "version": 3,
  "sources": ["<define:LAST_COMMIT_HASH>", "../node_modules/.pnpm/bondage-club-mod-sdk@1.2.0/node_modules/bondage-club-mod-sdk/dist/bcmodsdk.js", "../src/Responsive.ts", "../public/styles/main.css", "../src/Base/Modules.ts", "../src/Base/SettingUtils.ts", "../src/Screens/MainMenu.ts", "../src/Base/BaseSetting.ts", "../src/Translation.ts", "../src/Utilities/Data.ts", "../src/Utilities/Definition.ts", "../src/Utilities/String.ts", "../src/Base/SettingDefinitions.ts", "../src/Screens/Reset.ts", "../src/Screens/Support.ts", "../src/Base/BaseModule.ts", "../src/Modules/CharTalk.ts", "../src/Utilities/ChatMessages.ts", "../src/Utilities/Other.ts", "../src/Utilities/SDK.ts", "../src/Utilities/Console.ts", "../src/Modules/Responses.ts", "../src/Utilities/Handlers.ts", "../src/Screens/Responses.ts", "../src/Utilities/DefaultResponsesEntries.ts", "../src/Modules/Global.ts", "../src/Screens/Global.ts", "../src/Modules/Profiles.ts", "../src/Screens/Profiles.ts", "../src/Modules/Version.ts", "../src/Utilities/Messages.ts", "../src/Utilities/Commands.ts"],
  "sourcesContent": ["", "// Bondage Club Mod Development Kit (1.2.0)\n// For more info see: https://github.com/Jomshir98/bondage-club-mod-sdk\n/** @type {ModSDKGlobalAPI} */\nvar bcModSdk=function(){\"use strict\";const o=\"1.2.0\";function e(o){alert(\"Mod ERROR:\\n\"+o);const e=new Error(o);throw console.error(e),e}const t=new TextEncoder;function n(o){return!!o&&\"object\"==typeof o&&!Array.isArray(o)}function r(o){const e=new Set;return o.filter((o=>!e.has(o)&&e.add(o)))}const i=new Map,a=new Set;function c(o){a.has(o)||(a.add(o),console.warn(o))}function s(o){const e=[],t=new Map,n=new Set;for(const r of f.values()){const i=r.patching.get(o.name);if(i){e.push(...i.hooks);for(const[e,a]of i.patches.entries())t.has(e)&&t.get(e)!==a&&c(`ModSDK: Mod '${r.name}' is patching function ${o.name} with same pattern that is already applied by different mod, but with different pattern:\\nPattern:\\n${e}\\nPatch1:\\n${t.get(e)||\"\"}\\nPatch2:\\n${a}`),t.set(e,a),n.add(r.name)}}e.sort(((o,e)=>e.priority-o.priority));const r=function(o,e){if(0===e.size)return o;let t=o.toString().replaceAll(\"\\r\\n\",\"\\n\");for(const[n,r]of e.entries())t.includes(n)||c(`ModSDK: Patching ${o.name}: Patch ${n} not applied`),t=t.replaceAll(n,r);return(0,eval)(`(${t})`)}(o.original,t);let i=function(e){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookChainExit)||void 0===i?void 0:i.call(t,o.name,n),c=r.apply(this,e);return null==a||a(),c};for(let t=e.length-1;t>=0;t--){const n=e[t],r=i;i=function(e){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookEnter)||void 0===i?void 0:i.call(t,o.name,n.mod),c=n.hook.apply(this,[e,o=>{if(1!==arguments.length||!Array.isArray(e))throw new Error(`Mod ${n.mod} failed to call next hook: Expected args to be array, got ${typeof o}`);return r.call(this,o)}]);return null==a||a(),c}}return{hooks:e,patches:t,patchesSources:n,enter:i,final:r}}function l(o,e=!1){let r=i.get(o);if(r)e&&(r.precomputed=s(r));else{let e=window;const a=o.split(\".\");for(let t=0;t<a.length-1;t++)if(e=e[a[t]],!n(e))throw new Error(`ModSDK: Function ${o} to be patched not found; ${a.slice(0,t+1).join(\".\")} is not object`);const c=e[a[a.length-1]];if(\"function\"!=typeof c)throw new Error(`ModSDK: Function ${o} to be patched not found`);const l=function(o){let e=-1;for(const n of t.encode(o)){let o=255&(e^n);for(let e=0;e<8;e++)o=1&o?-306674912^o>>>1:o>>>1;e=e>>>8^o}return((-1^e)>>>0).toString(16).padStart(8,\"0\").toUpperCase()}(c.toString().replaceAll(\"\\r\\n\",\"\\n\")),d={name:o,original:c,originalHash:l};r=Object.assign(Object.assign({},d),{precomputed:s(d),router:()=>{},context:e,contextProperty:a[a.length-1]}),r.router=function(o){return function(...e){return o.precomputed.enter.apply(this,[e])}}(r),i.set(o,r),e[r.contextProperty]=r.router}return r}function d(){for(const o of i.values())o.precomputed=s(o)}function p(){const o=new Map;for(const[e,t]of i)o.set(e,{name:e,original:t.original,originalHash:t.originalHash,sdkEntrypoint:t.router,currentEntrypoint:t.context[t.contextProperty],hookedByMods:r(t.precomputed.hooks.map((o=>o.mod))),patchedByMods:Array.from(t.precomputed.patchesSources)});return o}const f=new Map;function u(o){f.get(o.name)!==o&&e(`Failed to unload mod '${o.name}': Not registered`),f.delete(o.name),o.loaded=!1,d()}function g(o,t){o&&\"object\"==typeof o||e(\"Failed to register mod: Expected info object, got \"+typeof o),\"string\"==typeof o.name&&o.name||e(\"Failed to register mod: Expected name to be non-empty string, got \"+typeof o.name);let r=`'${o.name}'`;\"string\"==typeof o.fullName&&o.fullName||e(`Failed to register mod ${r}: Expected fullName to be non-empty string, got ${typeof o.fullName}`),r=`'${o.fullName} (${o.name})'`,\"string\"!=typeof o.version&&e(`Failed to register mod ${r}: Expected version to be string, got ${typeof o.version}`),o.repository||(o.repository=void 0),void 0!==o.repository&&\"string\"!=typeof o.repository&&e(`Failed to register mod ${r}: Expected repository to be undefined or string, got ${typeof o.version}`),null==t&&(t={}),t&&\"object\"==typeof t||e(`Failed to register mod ${r}: Expected options to be undefined or object, got ${typeof t}`);const i=!0===t.allowReplace,a=f.get(o.name);a&&(a.allowReplace&&i||e(`Refusing to load mod ${r}: it is already loaded and doesn't allow being replaced.\\nWas the mod loaded multiple times?`),u(a));const c=o=>{let e=g.patching.get(o.name);return e||(e={hooks:[],patches:new Map},g.patching.set(o.name,e)),e},s=(o,t)=>(...n)=>{var i,a;const c=null===(a=(i=m.errorReporterHooks).apiEndpointEnter)||void 0===a?void 0:a.call(i,o,g.name);g.loaded||e(`Mod ${r} attempted to call SDK function after being unloaded`);const s=t(...n);return null==c||c(),s},p={unload:s(\"unload\",(()=>u(g))),hookFunction:s(\"hookFunction\",((o,t,n)=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to patch a function: Expected function name string, got ${typeof o}`);const i=l(o),a=c(i);\"number\"!=typeof t&&e(`Mod ${r} failed to hook function '${o}': Expected priority number, got ${typeof t}`),\"function\"!=typeof n&&e(`Mod ${r} failed to hook function '${o}': Expected hook function, got ${typeof n}`);const s={mod:g.name,priority:t,hook:n};return a.hooks.push(s),d(),()=>{const o=a.hooks.indexOf(s);o>=0&&(a.hooks.splice(o,1),d())}})),patchFunction:s(\"patchFunction\",((o,t)=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to patch a function: Expected function name string, got ${typeof o}`);const i=l(o),a=c(i);n(t)||e(`Mod ${r} failed to patch function '${o}': Expected patches object, got ${typeof t}`);for(const[n,i]of Object.entries(t))\"string\"==typeof i?a.patches.set(n,i):null===i?a.patches.delete(n):e(`Mod ${r} failed to patch function '${o}': Invalid format of patch '${n}'`);d()})),removePatches:s(\"removePatches\",(o=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to patch a function: Expected function name string, got ${typeof o}`);const t=l(o);c(t).patches.clear(),d()})),callOriginal:s(\"callOriginal\",((o,t,n)=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to call a function: Expected function name string, got ${typeof o}`);const i=l(o);return Array.isArray(t)||e(`Mod ${r} failed to call a function: Expected args array, got ${typeof t}`),i.original.apply(null!=n?n:globalThis,t)})),getOriginalHash:s(\"getOriginalHash\",(o=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to get hash: Expected function name string, got ${typeof o}`);return l(o).originalHash}))},g={name:o.name,fullName:o.fullName,version:o.version,repository:o.repository,allowReplace:i,api:p,loaded:!0,patching:new Map};return f.set(o.name,g),Object.freeze(p)}function h(){const o=[];for(const e of f.values())o.push({name:e.name,fullName:e.fullName,version:e.version,repository:e.repository});return o}let m;const y=void 0===window.bcModSdk?window.bcModSdk=function(){const e={version:o,apiVersion:1,registerMod:g,getModsInfo:h,getPatchingInfo:p,errorReporterHooks:Object.seal({apiEndpointEnter:null,hookEnter:null,hookChainExit:null})};return m=e,Object.freeze(e)}():(n(window.bcModSdk)||e(\"Failed to init Mod SDK: Name already in use\"),1!==window.bcModSdk.apiVersion&&e(`Failed to init Mod SDK: Different version already loaded ('1.2.0' vs '${window.bcModSdk.version}')`),window.bcModSdk.version!==o&&alert(`Mod SDK warning: Loading different but compatible versions ('1.2.0' vs '${window.bcModSdk.version}')\\nOne of mods you are using is using an old version of SDK. It will work for now but please inform author to update`),window.bcModSdk);return\"undefined\"!=typeof exports&&(Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=y),y}();\n", "import bcr_style from '../public/styles/main.css';\nimport { modules, registerModule } from './Base/Modules';\nimport { GUI } from './Base/SettingUtils';\nimport { CharTalkModule } from './Modules/CharTalk';\nimport { GlobalModule } from './Modules/Global';\nimport { ProfilesModule } from './Modules/Profiles';\nimport { ResponsesModule } from './Modules/Responses';\nimport { VersionModule } from './Modules/Version';\nimport { Localization } from './Translation';\nimport { loadCommands } from './Utilities/Commands';\nimport { conDebug, conLog } from './Utilities/Console';\nimport { clearOldData, dataFix, dataStore, dataTake } from './Utilities/Data';\nimport { MOD_VERSION_CAPTION } from './Utilities/Definition';\nimport { injectStyle } from './Utilities/Other';\nimport { hookFunction } from './Utilities/SDK';\n\nfunction initWait() {\n  conLog('Init wait');\n  if (CurrentScreen == null || CurrentScreen === 'Login') {\n    hookFunction('LoginResponse', 0, (args, next) => {\n      conDebug(`Init! LoginResponse caught: `, args);\n      next(args);\n      const response = args[0];\n      if (response && typeof response.Name === 'string' && typeof response.AccountName === 'string') {\n        init();\n      }\n    });\n  } else {\n    conLog(`Already logged in, init`);\n    init();\n  }\n}\n\nexport async function init() {\n  if (window.ResponsiveLoaded) return;\n\n  await Localization.load();\n\n  injectStyle(bcr_style, 'bcr_style');\n\n  dataTake();\n  loadCommands();\n\n  if (!initModules()) {\n    unload();\n    return;\n  }\n  clearOldData();\n  dataFix();\n\n  VersionModule.checkIfNewVersion();\n\n  dataStore();\n\n  window.ResponsiveLoaded = true;\n  conLog(`Loaded! Version: ${MOD_VERSION_CAPTION}`);\n}\n\nfunction initModules(): boolean {\n  registerModule(new GUI());\n  registerModule(new GlobalModule());\n  registerModule(new ResponsesModule());\n  registerModule(new ProfilesModule());\n  registerModule(new VersionModule());\n  registerModule(new CharTalkModule());\n\n  for (const m of modules()) {\n    m.Init();\n  }\n\n  for (const m of modules()) {\n    m.Load();\n  }\n\n  for (const m of modules()) {\n    m.Run();\n  }\n\n  conLog('Modules Loaded.');\n  return true;\n}\n\nexport function unload(): true {\n  unloadModules();\n\n  delete window.ResponsiveLoaded;\n  conLog('Unloaded.');\n  return true;\n}\n\nfunction unloadModules() {\n  for (const m of modules()) {\n    m.Unload();\n  }\n}\n\ninitWait();\n", ".ResponsiveMessageContent {\n  display: inline;\n}\n\n.ResponsiveVersion {\n  font-weight: bold;\n  color: rgb(203, 185, 23);\n}\n\n#TextAreaChatLog[data-colortheme='dark'] div.ChatMessage.ResponsiveMessage,\n#TextAreaChatLog[data-colortheme='dark2'] div.ChatMessage.ResponsiveMessage {\n  background-color: #111;\n  border: 2px solid #440171;\n  padding-left: 5px;\n  display: block;\n  white-space: normal;\n  color: #eee;\n}\n\n#TextAreaChatLog div.ChatMessage.ResponsiveMessage {\n  background-color: #eee;\n  border: 2px solid #440171;\n  padding-left: 5px;\n  display: block;\n  white-space: wrap;\n  color: #111;\n}\n\n#TextAreaChatLog[data-colortheme='dark'] a.ResponsiveText,\n#TextAreaChatLog[data-colortheme='dark2'] a.ResponsiveText {\n  cursor: pointer;\n  font-weight: bold;\n  color: #eee;\n}\n\n#TextAreaChatLog a.ResponsiveText {\n  cursor: pointer;\n  font-weight: bold;\n  color: #111;\n}\n\n#ResponsiveGratitude {\n  position: fixed;\n  width: 25%;\n  height: 50%;\n  top: 15%;\n  left: 50%;\n}\n\n.ResponsiveH {\n  font-size: 1em;\n  color: #333;\n}\n\n.ResponsiveP {\n  font-size: 0.6em;\n  color: #555;\n  line-height: 1.5;\n}\n\n.ResponsiveP:last-child {\n  font-size: 0.8em;\n  color: #ff69b4;\n}\n", "import { BaseModule } from \"./BaseModule\";\n\nexport const modulesMap: Map<string, BaseModule> = new Map<string, BaseModule>();\n\nexport function modules(): BaseModule[] {\n  return [...modulesMap.values()];\n}\n\nexport function registerModule<T extends BaseModule>(module: T): T {\n  modulesMap.set(module.constructor.name, module);\n  return module;\n}\n\nexport function getModule<T extends BaseModule>(moduleType: string): T {\n  return modulesMap.get(moduleType) as T;\n}\n", "import { MainMenu } from \"../Screens/MainMenu\";\nimport { getText } from \"../Translation\";\nimport { DebugMode } from \"../Utilities/Definition\";\nimport { BaseModule } from \"./BaseModule\";\nimport { GuiSubscreen } from \"./BaseSetting\";\nimport { modules } from \"./Modules\";\nimport { setSubscreen, SETTING_NAME_PREFIX } from \"./SettingDefinitions\";\n\nexport class GUI extends BaseModule {\n  static instance: GUI | null = null;\n\n  private _subscreens: GuiSubscreen[];\n  private _mainMenu: MainMenu;\n  private _currentSubscreen: GuiSubscreen | null = null;\n\n  get subscreens(): GuiSubscreen[] {\n    return this._subscreens;\n  }\n\n  get mainMenu(): MainMenu {\n    return this._mainMenu;\n  }\n\n  get currentSubscreen(): GuiSubscreen | null {\n    return this._currentSubscreen;\n  }\n\n  set currentSubscreen(subscreen: GuiSubscreen | string | null) {\n    if (this._currentSubscreen) {\n      this._currentSubscreen.Unload();\n    }\n    if (typeof subscreen === \"string\") {\n      const scr = this._subscreens?.find((s) => s.name === subscreen);\n      if (!scr) throw `Failed to find screen name ${subscreen}`;\n      this._currentSubscreen = scr;\n    } else {\n      this._currentSubscreen = subscreen;\n    }\n\n    PreferenceMessage = \"\";\n    PreferencePageCurrent = 1;\n\n    let subscreenName = \"\";\n    if (this._currentSubscreen) {\n      subscreenName = SETTING_NAME_PREFIX + this._currentSubscreen?.name;\n      this._currentSubscreen.Load();\n    }\n  }\n\n  get currentCharacter(): Character {\n    return Player;\n  }\n\n  constructor() {\n    super();\n    if (GUI.instance) {\n      throw new Error(\"Duplicate initialization\");\n    }\n\n    this._mainMenu = new MainMenu(this);\n    this._subscreens = [this._mainMenu];\n\n    GUI.instance = this;\n  }\n\n  get defaultSettings(): null {\n    return null;\n  }\n\n  Load(): void {\n    // At that point all other modules have been initialized, build the list of their screens\n    for (const module of modules()) {\n      if (!module.settingsScreen) continue;\n\n      this._subscreens.push(new module.settingsScreen(module));\n    }\n\n    this._mainMenu.subscreens = this._subscreens;\n    PreferenceRegisterExtensionSetting({\n      Identifier: 'Responsive',\n      ButtonText: getText('infosheet.button.mod_button'),\n      Image: `Icons/Arousal.png`,\n      load: () => {\n        setSubscreen(new MainMenu(this));\n      },\n      run: () => {\n        if (this._currentSubscreen) {\n          MainCanvas.textAlign = 'left';\n          this._currentSubscreen.Run();\n          MainCanvas.textAlign = 'center';\n  \n          this.drawDebug();\n        }\n      },\n      click: () => {\n        if (this._currentSubscreen) {\n          this._currentSubscreen.Click();\n        }\n      },\n      exit: () => {\n        if (this._currentSubscreen) {\n          this._currentSubscreen.Exit();\n        }\n      },\n    });\n  }\n\n  drawDebug() {\n    if (DebugMode) {\n      if (MouseX > 0 || MouseY > 0) {\n        MainCanvas.save();\n        MainCanvas.lineWidth = 1;\n        MainCanvas.strokeStyle = \"red\";\n        MainCanvas.beginPath();\n        MainCanvas.moveTo(0, MouseY);\n        MainCanvas.lineTo(2000, MouseY);\n        MainCanvas.moveTo(MouseX, 0);\n        MainCanvas.lineTo(MouseX, 1000);\n        MainCanvas.stroke();\n        MainCanvas.fillStyle = \"black\";\n        MainCanvas.strokeStyle = \"white\";\n        MainCanvas.fillRect(0, 950, 250, 50);\n        MainCanvas.strokeRect(0, 950, 250, 50);\n        DrawText(`X: ${MouseX} Y: ${MouseY}`, 125, 975, \"white\");\n        MainCanvas.restore();\n      }\n    }\n  }\n}\n", "import { GuiSubscreen } from '../Base/BaseSetting';\nimport { GUI } from '../Base/SettingUtils';\nimport { getText } from '../Translation';\nimport { MOD_VERSION_CAPTION } from '../Utilities/Definition';\nimport { GuiReset } from './Reset';\nimport { GuiSupport } from './Support';\n\nexport class MainMenu extends GuiSubscreen {\n  subscreens: GuiSubscreen[] = [];\n\n  get name(): string {\n    return 'mainmenu';\n  }\n\n  constructor(module: GUI) {\n    super(module);\n\n    this.subscreens = module.subscreens;\n  }\n\n  Load(): void {\n    if (!GUI.instance?.currentSubscreen) {\n      this.setSubscreen(this);\n      return;\n    }\n\n    super.Load();\n  }\n\n  Run() {\n    let tmp = GuiSubscreen.START_X;\n    var prev = MainCanvas.textAlign;\n\n    GuiSubscreen.START_X = 550;\n    MainCanvas.textAlign = 'left';\n\n    DrawCharacter(Player, 50, 50, 0.9, false);\n    DrawText(\n      getText('mainmenu.title').replace('$ModVersion', MOD_VERSION_CAPTION) + '  ' + GuiSupport.getSupporter(),\n      GuiSubscreen.START_X,\n      GuiSubscreen.START_Y - GuiSubscreen.Y_MOD,\n      'Black',\n      '#D7F6E9'\n    );\n    DrawButton(1815, 75, 90, 90, '', 'White', 'Icons/Exit.png');\n\n    MainCanvas.textAlign = 'center';\n    let i = 0;\n    for (const screen of this.subscreens) {\n      const PX = Math.floor(i / 6);\n      const PY = i % 6;\n\n      if (screen.name == 'mainmenu') continue;\n\n      DrawButton(GuiSubscreen.START_X + 430 * PX, 190 + 120 * PY, 450, 90, '', 'White', '', '');\n      DrawImageResize(screen.icon, GuiSubscreen.START_X + 430 * PX + 10, 190 + 120 * PY + 10, 70, 70);\n\n      MainCanvas.textAlign = 'left';\n      DrawTextFit(getText(`mainmenu.button.${screen.name}`), GuiSubscreen.START_X + 100 + 430 * PX, 235 + 120 * PY, 340, 'Black');\n      MainCanvas.textAlign = 'center';\n\n      i++;\n\n      MainCanvas.textAlign = 'left';\n    }\n\n    DrawButton(1500, 630, 405, 80, '', 'IndianRed');\n    DrawImageResize('Icons/ServiceBell.png', 1510, 640, 60, 60);\n    DrawTextFit('Reset', 1580, 670, 320, 'Black');\n\n    DrawButton(1500, 730, 405, 80, '', '#BDA203', '', 'Open Responsive Wiki on GitHub.', false);\n    DrawImageResize('Icons/Introduction.png', 1510, 740, 60, 60);\n    DrawTextFit('Wiki', 1580, 770, 320, 'Black');\n\n    DrawButton(1500, 830, 405, 80, '', '#49225C');\n    DrawImageResize('Assets/Female3DCG/Emoticon/Coffee/Icon.png', 1510, 840, 60, 60);\n    DrawTextFit('Support Me\u2764', 1580, 870, 320, 'Black');\n\n    GuiSubscreen.START_X = tmp;\n    MainCanvas.textAlign = prev;\n  }\n\n  Click() {\n    if (MouseIn(1815, 75, 90, 90)) return this.Exit();\n\n    let tmp = GuiSubscreen.START_X;\n    GuiSubscreen.START_X = 550;\n    let i = 0;\n    for (const screen of this.subscreens) {\n      const PX = Math.floor(i / 6);\n      const PY = i % 6;\n\n      if (screen.name == 'mainmenu') continue;\n\n      if (MouseIn(GuiSubscreen.START_X + 430 * PX, 190 + 120 * PY, 450, 90)) {\n        this.setSubscreen(screen);\n        return;\n      }\n\n      i++;\n    }\n    GuiSubscreen.START_X = tmp;\n\n    if (MouseIn(1500, 630, 405, 80)) this.setSubscreen(new GuiReset());\n    if (MouseIn(1500, 730, 400, 80)) window.open('https://github.com/dDeepLb/BC-Responsive/wiki/', '_blank');\n    if (MouseIn(1500, 830, 400, 80)) this.setSubscreen(new GuiSupport());\n  }\n\n  Exit(): void {\n    CharacterAppearanceForceUpCharacter = -1;\n    CharacterLoadCanvas(Player);\n    this.setSubscreen(null);\n    PreferenceSubscreenExtensionsClear();\n  }\n}\n", "import { Setting } from \"../../.types/setting\";\nimport { BaseSettingsModel } from \"../Models/Base\";\nimport { getText } from \"../Translation\";\nimport { dataStore } from \"../Utilities/Data\";\nimport { BaseModule } from \"./BaseModule\";\nimport { modules } from \"./Modules\";\nimport { SETTING_FUNC_NAMES, SETTING_FUNC_PREFIX, SETTING_NAME_PREFIX, setSubscreen } from \"./SettingDefinitions\";\nimport { GUI } from \"./SettingUtils\";\n\nexport abstract class GuiSubscreen {\n  static START_X: number = 180;\n  static START_Y: number = 205;\n  static X_MOD: number = 950;\n  static Y_MOD: number = 75;\n  static POS_BAK: number = GuiSubscreen.START_X;\n  static TEXT_ALIGN_BAK;\n  readonly module: BaseModule;\n\n  constructor(module?: BaseModule) {\n    if (module) this.module = module;\n\n    // create each handler for a new preference subscreen\n    SETTING_FUNC_NAMES.forEach((name) => {\n      const fName = SETTING_FUNC_PREFIX + SETTING_NAME_PREFIX + this.name + name;\n      if (typeof (<any>this)[name] === \"function\" && typeof (<any>window)[fName] !== \"function\")\n        (<any>window)[fName] = () => {\n          (<any>this)[name]();\n        };\n    });\n  }\n\n  get name(): string {\n    return \"UNKNOWN\";\n  }\n\n  get icon(): string {\n    return \"\";\n  }\n\n  get label(): string {\n    return \"UNDEFINED SETTING SCREEN\";\n  }\n\n  get message(): string {\n    return PreferenceMessage;\n  }\n\n  set message(message: string) {\n    PreferenceMessage = message;\n  }\n\n  get SubscreenName(): string {\n    return SETTING_NAME_PREFIX + this.constructor.name;\n  }\n\n  setSubscreen(screen: GuiSubscreen | string | null) {\n    return setSubscreen(screen);\n  }\n\n  get settings(): BaseSettingsModel {\n    return this.module.settings as BaseSettingsModel;\n  }\n\n  get multipageStructure(): Setting[][] {\n    return [[]];\n  }\n\n  get structure(): Setting[] {\n    return this.multipageStructure[Math.min(PreferencePageCurrent - 1, this.multipageStructure.length - 1)];\n  }\n\n  get character(): Character {\n    return GUI.instance?.currentCharacter as Character;\n  }\n\n  getYPos(ix: number) {\n    return GuiSubscreen.START_Y + GuiSubscreen.Y_MOD * (ix % 9);\n  }\n\n  getXPos(ix: number) {\n    return GuiSubscreen.START_X + GuiSubscreen.X_MOD * Math.floor(ix / 9);\n  }\n\n  hideElements() {\n    this.multipageStructure.forEach((item, ix, arr) => {\n      if (ix != PreferencePageCurrent - 1) {\n        item.forEach((setting) => {\n          if (setting.type == \"text\" || setting.type == \"number\") this.elementHide(setting.id);\n        });\n      }\n    });\n  }\n\n  Load() {\n    for (const module of modules()) {\n      if (!module.settingsScreen) continue;\n      if (!Object.keys(module.settings).length) module.registerDefaultSettings();\n    }\n    this.multipageStructure.forEach((s) =>\n      s.forEach((item) => {\n        switch (item.type) {\n          case \"text\":\n            let input = ElementCreateInput(item.id, \"text\", item.setting(), \"255\");\n            input.setAttribute(\"autocomplete\", \"off\");\n            break;\n          case \"number\":\n            ElementCreateInput(item.id, \"number\", item.setting(), \"255\");\n            break;\n        }\n      })\n    );\n\n    CharacterAppearanceForceUpCharacter = Player.MemberNumber ?? -1;\n  }\n\n  Run() {\n    GuiSubscreen.POS_BAK = GuiSubscreen.START_X;\n    GuiSubscreen.TEXT_ALIGN_BAK = MainCanvas.textAlign;\n\n    GuiSubscreen.START_X = 550;\n    MainCanvas.textAlign = \"left\";\n\n    DrawCharacter(Player, 50, 50, 0.9, false);\n    DrawText(getText(`${this.name}.title`), GuiSubscreen.START_X, GuiSubscreen.START_Y - GuiSubscreen.Y_MOD, \"Black\", \"#D7F6E9\");\n    DrawButton(1815, 75, 90, 90, \"\", \"White\", \"Icons/Exit.png\", \"Responsive\");\n\n    if (this.multipageStructure.length > 1) {\n      MainCanvas.textAlign = \"center\";\n      PreferencePageChangeDraw(1595, 75, this.multipageStructure.length);\n      MainCanvas.textAlign = \"left\";\n    }\n\n    this.hideElements();\n\n    this.structure.forEach((item, ix, arr) => {\n      switch (item.type) {\n        case \"checkbox\":\n          this.drawCheckbox(item.label, item.description, item.setting(), ix, item.disabled);\n          break;\n        case \"text\":\n        case \"number\":\n          this.elementPosition(item.id, item.label, item.description, ix, item.disabled);\n          break;\n        case \"label\":\n          this.drawLabel(item.label, item.description, ix);\n          break;\n        case \"button\":\n          this.drawBetterButton(item.position, item.size, item.label, item.color, item.image, item.disabled);\n          break;\n      }\n    });\n\n    GuiSubscreen.START_X = GuiSubscreen.POS_BAK;\n    MainCanvas.textAlign = GuiSubscreen.TEXT_ALIGN_BAK;\n  }\n\n  Click() {\n    GuiSubscreen.POS_BAK = GuiSubscreen.START_X;\n    GuiSubscreen.TEXT_ALIGN_BAK = MainCanvas.textAlign;\n\n    GuiSubscreen.START_X = 550;\n    MainCanvas.textAlign = \"left\";\n\n    if (MouseIn(1815, 75, 90, 90)) return this.Exit();\n    if (this.multipageStructure.length > 1) PreferencePageChangeClick(1595, 75, this.multipageStructure.length);\n\n    this.structure.forEach((item, ix, arr) => {\n      switch (item.type) {\n        case \"checkbox\":\n          if (MouseIn(this.getXPos(ix) + 600, this.getYPos(ix) - 32, 64, 64) && !item.disabled) {\n            item.setSetting(!item.setting());\n          }\n          break;\n        case \"button\":\n          if (MouseIn(item.position[0], item.position[1], item.size[0], item.size[1])) item.callback();\n          break;\n      }\n    });\n\n    GuiSubscreen.START_X = GuiSubscreen.POS_BAK;\n    MainCanvas.textAlign = GuiSubscreen.TEXT_ALIGN_BAK;\n  }\n\n  Exit() {\n    this.multipageStructure.forEach((s) =>\n      s.forEach((item) => {\n        switch (item.type) {\n          case \"number\":\n            if (!CommonIsNumeric(ElementValue(item.id))) {\n              ElementRemove(item.id);\n              break;\n            }\n          case \"text\":\n            item.setSetting(ElementValue(item.id));\n            ElementRemove(item.id);\n            break;\n        }\n      })\n    );\n\n    CharacterAppearanceForceUpCharacter = -1;\n    CharacterLoadCanvas(Player);\n\n    setSubscreen(\"mainmenu\");\n    dataStore();\n  }\n\n  Unload() {\n    // Empty\n  }\n\n  tooltip(text: string) {\n    drawTooltip(300, 850, 1400, text, \"left\");\n  }\n\n  drawCheckbox(label: string, description: string, value: boolean, order: number, disabled: boolean = false) {\n    var isHovering = MouseIn(this.getXPos(order), this.getYPos(order) - 32, 600, 64);\n    DrawTextFit(getText(label), this.getXPos(order), this.getYPos(order), 600, isHovering ? \"Red\" : \"Black\", \"Gray\");\n    DrawCheckbox(this.getXPos(order) + 600, this.getYPos(order) - 32, 64, 64, \"\", value ?? false, disabled);\n    if (isHovering) this.tooltip(getText(description));\n  }\n\n  drawBetterButton(position: number[], size: number[], label: string, color: string, image: string = \"\", disabled: boolean = false) {\n    var isHovering = MouseIn(position[0], position[1] - 32, size[0], size[1]);\n    DrawButton(position[0], position[1], size[0], size[1], \"\", color, \"\", \"\", disabled);\n    DrawImageResize(image, position[0] + 10, position[1] + 10, 60, 60);\n    DrawTextFit(getText(label), position[0] + 80, position[1] + 40, 600, isHovering ? \"Red\" : \"Black\", \"Gray\");\n  }\n\n  drawButton(label: string, color: string, order: number, XOffset: number, disabled: boolean = false) {\n    var isHovering = MouseIn(this.getXPos(order) + XOffset, this.getYPos(order) - 32, 200, 64);\n    DrawButton(this.getXPos(order) + XOffset, this.getYPos(order) - 32, 200, 64, \"\", color, \"\", \"\", disabled);\n    DrawTextFit(getText(label), this.getXPos(order) + XOffset + 58, this.getYPos(order), 600, isHovering ? \"Red\" : \"Black\", \"Gray\");\n  }\n\n  elementHide(elementId: string) {\n    ElementPosition(elementId, -999, -999, 1, 1);\n  }\n\n  elementPosition(elementId: string, label: string, description: string, order: number, disabled: boolean = false) {\n    var isHovering = MouseIn(this.getXPos(order), this.getYPos(order) - 32, 600, 64);\n    DrawTextFit(getText(label), this.getXPos(order), this.getYPos(order), 600, isHovering ? \"Red\" : \"Black\", \"Gray\");\n    ElementPosition(elementId, this.getXPos(order) + 750 + 225, this.getYPos(order), 800, 64);\n    if (disabled) ElementSetAttribute(elementId, \"disabled\", \"true\");\n    if (!disabled) document.getElementById(elementId)?.removeAttribute(\"disabled\");\n    if (isHovering) this.tooltip(getText(description));\n  }\n\n  drawLabel(label: string, description: string, order: number) {\n    var isHovering = MouseIn(this.getXPos(order), this.getYPos(order) - 32, 600, 64);\n    DrawTextFit(getText(label), this.getXPos(order), this.getYPos(order), 600, isHovering ? \"Red\" : \"Black\", \"Gray\");\n    if (isHovering) this.tooltip(getText(description));\n  }\n}\n\nfunction drawTooltip(x: number, y: number, width: number, text: string, align: \"left\" | \"center\" | \"right\") {\n  const bak = MainCanvas.textAlign;\n  MainCanvas.textAlign = align;\n  DrawRect(x, y, width, 65, \"#ffff88\");\n  DrawEmptyRect(x, y, width, 65, \"Black\");\n  DrawTextFit(text, align === \"left\" ? x + 3 : x + width / 2, y + 33, width - 6, \"black\");\n  MainCanvas.textAlign = bak;\n}\n", "export class Localization {\n  static Translation = new Object();\n\n  static async load() {\n    const lang = TranslationLanguage.toLowerCase();\n    this.Translation = await Localization.fetchLanguageFile(lang);\n  }\n\n  static getText(srcTag: string) {\n    return this.Translation[srcTag] || srcTag || '';\n  }\n\n  private static async fetchLanguageFile(lang: string) {\n    const response = await fetch(`${PUBLIC_URL}/i18n/${lang}.lang`);\n\n    if (lang != 'en' && !response.ok) {\n      return Localization.fetchLanguageFile('en');\n    }\n    const langFileContent = await response.text();\n\n    return this.parseLanguageFile(langFileContent);\n  }\n\n  private static parseLanguageFile(content) {\n    const translations = {};\n    const lines = content.split('\\n');\n\n    for (const line of lines) {\n      // Ignore empty lines and comments\n      if (line.trim() === '' || line.trim().startsWith('#')) {\n        continue;\n      }\n\n      const [key, value] = line.split('=');\n      translations[key.trim()] = value.trim();\n    }\n\n    return translations;\n  }\n}\n\nexport const getText = (string: string): string => Localization.getText(string);\n", "import { GlobalSettingsModel } from \"../Models/Base\";\nimport { ProfileEntryModel } from \"../Models/Profiles\";\nimport { ResponsesSettingsModel } from \"../Models/Responses\";\nimport { SettingsModel } from \"../Models/Settings\";\nimport { ModName } from \"./Definition\";\nimport { _String } from \"./String\";\n\nexport const PlayerStorage = () => Player[ModName];\nexport const ExtensionStorage = () => Player.ExtensionSettings[ModName];\n\nexport function dataTake() {\n  if (ExtensionStorage()) {\n    Player[ModName] = JSON.parse(LZString.decompressFromBase64(ExtensionStorage())) as SettingsModel;\n  } else if (Player.OnlineSettings[\"BCResponsive\"]) {\n    /*\n     * Unfortunatelly, if data is object, it means, that data was saved in ancient version,\n     * when dinosaurs and Jedis were living on the Earth. Or just something went wrong...\n     */\n    if (typeof Player.OnlineSettings[\"BCResponsive\"] == \"object\") {\n      return (Player[ModName] = <SettingsModel>{});\n    }\n    Player[ModName] = JSON.parse(LZString.decompressFromBase64(Player.OnlineSettings[\"BCResponsive\"]));\n\n    delete Player.OnlineSettings[\"BCResponsive\"];\n    window.ServerAccountUpdate.QueueData({ OnlineSettings: Player.OnlineSettings });\n  } else {\n    Player[ModName] = <SettingsModel>{};\n  }\n}\n\nexport function dataStore() {\n  if (!ExtensionStorage()) Player.ExtensionSettings[ModName] = \"\";\n  let Data: SettingsModel = {\n    Version: PlayerStorage().Version,\n    GlobalModule: PlayerStorage().GlobalModule,\n    ResponsesModule: PlayerStorage().ResponsesModule,\n    ProfilesModule: PlayerStorage().ProfilesModule\n  };\n\n  Player.ExtensionSettings[ModName] = _String.encode(Data);\n  ServerPlayerExtensionSettingsSync(ModName);\n}\n\nexport function dataErase(doResetSettings: boolean, doResetResponses: boolean, doResetProfiles: boolean) {\n  if (doResetSettings) {\n    Player[ModName].GlobalModule = <GlobalSettingsModel>{};\n  }\n\n  if (doResetResponses) {\n    Player[ModName].ResponsesModule = <ResponsesSettingsModel>{};\n  }\n\n  if (doResetProfiles) {\n    Player[ModName].ProfilesModule = <ProfileEntryModel[]>{};\n  }\n  dataStore();\n}\n\nexport function dataResetForManual() {\n  Player[ModName].ResponsesModule = <ResponsesSettingsModel>{\n    mainResponses: [],\n    extraResponses: {\n      low: [],\n      light: [],\n      medium: [],\n      hot: [],\n      orgasm: []\n    }\n  };\n  dataStore();\n}\n\nexport function dataFix() {\n  let data = Player[ModName];\n  let mainResponses = data.ResponsesModule.mainResponses;\n\n  mainResponses.forEach((entry) => {\n    if (entry.actName == undefined) {\n      mainResponses.splice(mainResponses.indexOf(entry));\n    }\n\n    if (typeof entry.groupName == \"string\") {\n      entry.groupName = [entry.groupName];\n    }\n\n    if (entry.responses == undefined) {\n      entry.responses = [\"\"];\n    }\n  });\n}\n\nexport function clearOldData() {\n  delete Player.OnlineSettings?.[\"BCResponsive\"]?.Profiles;\n  delete Player.OnlineSettings?.[\"BCResponsive\"]?.data;\n  delete Player.OnlineSettings?.[\"BCResponsive\"]?.SavedVersion;\n\n  delete Player[\"BCResponsive\"]?.Profiles;\n  delete Player[\"BCResponsive\"]?.data;\n  delete Player[\"BCResponsive\"]?.SavedVersion;\n}\n", "//messageTimer\nexport const MT = {\n  CHANGELOG: 30,\n  INFO: 15,\n  COMMANDS: 20\n};\n\nconst cmdKeyword = 'bcr';\nexport const CMD_BCR = cmdKeyword;\nexport const CMD_TOGGLE = `${cmdKeyword} toggle`;\nexport const CMD_CHANGELOG = `${cmdKeyword} changelog`;\nexport const CMD_VERSION = `${cmdKeyword} version`;\nexport const CMD_DEBUG_DATA = `${cmdKeyword} debug-data`;\n\nexport const ModName = `Responsive`;\nexport const FullModName = `Bondage Club Responsive`; //\u00AF\\_(\u2323\u032F\u0300 \u2323\u0301)_/\u00AF\nexport const MOD_VERSION_CAPTION = IS_DEVEL ? `${MOD_VERSION} - ${VERSION_HASH}` : MOD_VERSION;\nexport const ModRepository = `https://github.com/dDeepLb/BC-Responsive`;\n\nexport const DebugMode = false;\n", "export class _String {\n  static encode(string: string | object) {\n    return LZString.compressToBase64(JSON.stringify(string));\n  }\n\n  static decode(string: string | undefined) {\n    let d = LZString.decompressFromBase64(string as string);\n    let data = {};\n\n    try {\n      let decoded = JSON.parse(d as string);\n      data = decoded;\n    } catch {}\n    if (data) return data;\n  }\n\n  static shuffle(string: string[]) {\n    let temp: string[] = JSON.parse(JSON.stringify(string));\n    let ret: string[] = [];\n    while (temp.length > 0) {\n      let d = Math.floor(Math.random() * temp.length);\n      ret.push(temp[d]);\n      temp.splice(d, 1);\n    }\n    return ret;\n  }\n}\n", "import { BaseModule } from \"./BaseModule\";\nimport { GuiSubscreen } from \"./BaseSetting\";\nimport { GUI } from \"./SettingUtils\";\n\nexport const SETTING_FUNC_PREFIX: string = \"PreferenceSubscreen\";\nexport const SETTING_NAME_PREFIX: string = \"BCR\";\nexport const SETTING_FUNC_NAMES: string[] = [\"Load\", \"Run\", \"Click\", \"Unload\", \"Exit\"];\n\nexport type Subscreen = new (module: BaseModule) => GuiSubscreen;\n\nexport function getCurrentSubscreen(): GuiSubscreen | null {\n  return GUI.instance && GUI.instance.currentSubscreen;\n}\n\nexport function setSubscreen(subscreen: GuiSubscreen | string | null): GuiSubscreen | null {\n  if (!GUI.instance) {\n    throw new Error(\"Attempt to set subscreen before init\");\n  }\n  GUI.instance.currentSubscreen = subscreen;\n  return GUI.instance.currentSubscreen;\n}\n", "import { GuiSubscreen } from \"../Base/BaseSetting\";\nimport { dataErase, dataResetForManual } from \"../Utilities/Data\";\nimport { getText } from \"../Translation\";\n\nexport class GuiReset extends GuiSubscreen {\n  get name(): string {\n    return \"reset\";\n  }\n\n  get icon(): string {\n    return \"\";\n  }\n\n  private allowedConfirmTime: number | null = 0;\n\n  private doResetForManualSettings: boolean = false;\n\n  private doResetSettings: boolean = true;\n  private doResetResponses: boolean = true;\n  private doResetProfiles: boolean = false;\n\n  Load() {\n    this.allowedConfirmTime = Date.now() + 10_000;\n    super.Load();\n  }\n\n  Run() {\n    GuiSubscreen.POS_BAK = GuiSubscreen.START_X;\n    GuiSubscreen.TEXT_ALIGN_BAK = MainCanvas.textAlign;\n\n    GuiSubscreen.START_X = 180;\n    MainCanvas.textAlign = \"center\";\n\n    DrawText(getText(`reset.label.perma_reset_of_bcr_data`), 1000, 125, \"Black\");\n\n    DrawText(getText(`reset.label.warning`), 1000, 225, \"Black\", \"Black\");\n    DrawText(getText(`reset.label.if_u_confirm_perma_reset`), 1000, 325, \"Black\");\n\n    DrawText(getText(`reset.label.youll_able_to_use_bcr`), 1000, 375, \"Gray\");\n\n    DrawText(getText(`reset.label.action_cannot_be_undone`), 1000, 425, \"Red\", \"Black\");\n\n    const now = Date.now();\n    if (now < this.allowedConfirmTime) {\n      DrawButton(\n        1000,\n        690,\n        200,\n        80,\n        `${getText(\"reset.button.confirm\")} (${Math.floor((this.allowedConfirmTime - now) / 1000)})`,\n        \"#ddd\",\n        undefined,\n        undefined,\n        true\n      );\n    } else {\n      DrawButton(1000, 690, 200, 80, getText(\"reset.button.confirm\"), \"White\");\n    }\n\n    DrawButton(1520, 690, 200, 80, getText(\"reset.button.cancel\"), \"White\");\n\n    MainCanvas.textAlign = \"left\";\n\n    this.drawCheckbox(\n      \"reset.setting.reset_for_manual_setting.text\",\n      \"reset.setting.reset_for_manual_setting.desc\",\n      this.doResetForManualSettings,\n      4\n    );\n    this.drawCheckbox(\n      \"reset.setting.reset_settings.text\",\n      \"reset.setting.reset_settings.desc\",\n      this.doResetSettings,\n      6,\n      this.doResetForManualSettings\n    );\n    this.drawCheckbox(\n      \"reset.setting.reset_responses.text\",\n      \"reset.setting.reset_responses.desc\",\n      this.doResetResponses,\n      7,\n      this.doResetForManualSettings\n    );\n    this.drawCheckbox(\n      \"reset.setting.reset_profiles.text\",\n      \"reset.setting.reset_profiles.desc\",\n      this.doResetProfiles,\n      8,\n      this.doResetForManualSettings\n    );\n\n    MainCanvas.textAlign = GuiSubscreen.TEXT_ALIGN_BAK;\n  }\n\n  Click() {\n    if (this.allowedConfirmTime === null) return;\n\n    if (MouseIn(1520, 690, 200, 80)) return this.Exit();\n\n    if (MouseIn(1000, 690, 200, 80) && Date.now() >= this.allowedConfirmTime) return this.Confirm();\n\n    if (MouseIn(this.getXPos(4) + 600, this.getYPos(4) - 32, 64, 64)) return (this.doResetForManualSettings = !this.doResetForManualSettings);\n    if (MouseIn(this.getXPos(6) + 600, this.getYPos(6) - 32, 64, 64) && !this.doResetForManualSettings)\n      return (this.doResetSettings = !this.doResetSettings);\n    if (MouseIn(this.getXPos(7) + 600, this.getYPos(7) - 32, 64, 64) && !this.doResetForManualSettings)\n      return (this.doResetResponses = !this.doResetResponses);\n    if (MouseIn(this.getXPos(8) + 800, this.getYPos(8) - 32, 64, 64) && !this.doResetForManualSettings)\n      return (this.doResetProfiles = !this.doResetProfiles);\n  }\n\n  Confirm() {\n    this.allowedConfirmTime = null;\n    if (this.doResetForManualSettings) {\n      dataResetForManual();\n    } else {\n      dataErase(this.doResetSettings, this.doResetResponses, this.doResetProfiles);\n    }\n    this.setSubscreen(null);\n    PreferenceSubscreenExtensionsClear();\n  }\n}\n", "import { Button, Setting } from '../../.types/setting';\nimport { GuiSubscreen } from '../Base/BaseSetting';\nimport { getText } from '../Translation';\n\nexport class GuiSupport extends GuiSubscreen {\n  private static thankYouList: string[] = ['Ellena', 'weboos', 'Jamie'];\n  private static thankYouNext = 0;\n  private static thankYou = '';\n\n  get name(): string {\n    return 'Support';\n  }\n\n  get structure(): Setting[] {\n    return [\n      <Button>{\n        type: 'button',\n        position: [GuiSubscreen.START_X, GuiSubscreen.START_Y],\n        size: [405, 80],\n        label: 'support.button.ko-fi',\n        color: '#49225C',\n        image: 'https://storage.ko-fi.com/cdn/nav-logo-stroke.png',\n        disabled: false,\n        callback() {\n          window.open('https://ko-fi.com/monikka_bc', '_blank');\n        }\n      },\n      <Button>{\n        type: 'button',\n        position: [GuiSubscreen.START_X, GuiSubscreen.START_Y + GuiSubscreen.Y_MOD + 20],\n        size: [405, 80],\n        label: 'support.button.patreon',\n        color: '#49225C',\n        image: 'https://c5.patreon.com/external/favicon/rebrand/favicon-32.png?v=af5597c2ef',\n        disabled: false,\n        callback() {\n          window.open('https://patreon.com/monikka_bc', '_blank');\n        }\n      }\n    ];\n  }\n\n  static getSupporter() {\n    if (GuiSupport.thankYouNext < CommonTime()) GuiSupport.doNextThankYou();\n    return `${getText('support.other.thankyou')}, ${GuiSupport.thankYou}`;\n  }\n\n  static doNextThankYou() {\n    if (GuiSupport.thankYou && GuiSupport.thankYouList.length < 2) return;\n    GuiSupport.thankYou = CommonRandomItemFromList(GuiSupport.thankYou, GuiSupport.thankYouList);\n    GuiSupport.thankYouNext = CommonTime() + 4000;\n  }\n\n  Load() {\n    GuiSupport.doNextThankYou();\n\n    ElementCreateDiv('ResponsiveGratitude');\n    let elm = document.getElementById('ResponsiveGratitude');\n    ElementContent('ResponsiveGratitude', gratitudeHtml);\n\n    const font =\n      MainCanvas.canvas.clientWidth <= MainCanvas.canvas.clientHeight * 2\n        ? MainCanvas.canvas.clientWidth / 50\n        : MainCanvas.canvas.clientHeight / 25;\n\n    Object.assign(elm.style, {\n      fontFamily: CommonGetFontName(),\n      fontSize: font + 'px'\n    });\n\n    super.Load();\n  }\n\n  Run() {\n    super.Run();\n\n    let tmp = GuiSubscreen.START_X;\n    GuiSubscreen.START_X = 550;\n\n    DrawText(GuiSupport.getSupporter(), GuiSubscreen.START_X + 300, GuiSubscreen.START_Y - GuiSubscreen.Y_MOD, 'Black', '#D7F6E9');\n\n    GuiSubscreen.START_X = tmp;\n  }\n\n  Click() {\n    super.Click();\n  }\n\n  Exit() {\n    ElementRemove('ResponsiveGratitude');\n    super.Exit();\n  }\n}\n\nconst gratitudeHtml = /*html*/ `\n<h1 class=\"ResponsiveH\">Dear Supporters!</h1>\n<p class=\"ResponsiveP\">\n  I want to take a moment to express my heartfelt gratitude for considering supporting me. Your willingness to stand by\n  my side in this creative journey means the world to me, and I am truly humbled by your generosity.\n</p>\n<p class=\"ResponsiveP\">\n  Your support goes far beyond the financial contributions; it represents belief in my work and a shared passion for\n  what I do. Your encouragement inspires me to continue developing.\n</p>\n<p class=\"ResponsiveP\">\n  Your support not only helps me sustain and grow as a developer, but also enables me to dedicate more time and\n  resources to producing high-quality mods. It allows me to explore new ideas, enhance my skills, and bring even more\n  meaningful and enjoyable content to you.\n</p>\n<p class=\"ResponsiveP\">Thank you all~</p>\n<p class=\"ResponsiveP\">With love, Monikka\u2665</p>\n`;\n", "import { BaseSettingsModel } from \"../Models/Base\";\nimport { SettingsModel } from \"../Models/Settings\";\nimport { PlayerStorage } from \"../Utilities/Data\";\nimport { ModName } from \"../Utilities/Definition\";\nimport { Subscreen } from \"./SettingDefinitions\";\n\nexport abstract class BaseModule {\n  get settingsScreen(): Subscreen | null {\n    return null;\n  }\n\n  /** Allows changing the subkey for that module settings storage */\n  get settingsStorage(): string | null {\n    return this.constructor.name;\n  }\n\n  get settings(): BaseSettingsModel {\n    if (!this.settingsStorage) return {} as BaseSettingsModel;\n    if (!PlayerStorage()) {\n      Player[ModName] = <SettingsModel>{};\n      this.registerDefaultSettings();\n    } else if (!PlayerStorage()[this.settingsStorage]) this.registerDefaultSettings();\n    return PlayerStorage()[this.settingsStorage];\n  }\n\n  get enabled(): boolean {\n    if (!PlayerStorage()?.GlobalModule) return false;\n    return (\n      PlayerStorage().GlobalModule.ResponsiveEnabled &&\n      this.settings.ResponsiveEnabled &&\n      (ServerPlayerIsInChatRoom() || (CurrentModule == \"Room\" && CurrentScreen == \"Crafting\"))\n    );\n  }\n\n  Init() {\n    this.registerDefaultSettings();\n  }\n\n  registerDefaultSettings(): void {\n    const storage = this.settingsStorage;\n    const defaults = this.defaultSettings;\n    if (!storage || !defaults) return;\n\n    PlayerStorage()[storage] = Object.assign(defaults, PlayerStorage()[storage] ?? {});\n  }\n\n  get defaultSettings(): BaseSettingsModel | null {\n    return null;\n  }\n\n  Load() {}\n\n  Run() {\n    // Empty\n  }\n\n  Unload() {\n    // Empty\n  }\n}\n", "import { BaseModule } from \"../Base/BaseModule\";\nimport { isSimpleChat } from \"../Utilities/ChatMessages\";\nimport { PlayerStorage } from \"../Utilities/Data\";\nimport { HookPriority, ModuleCategory, hookFunction } from \"../Utilities/SDK\";\nimport { ResponsesModule } from \"./Responses\";\n\n/**\n * \"Frown\", \"Sad\", \"Pained\", \"Angry\", \"HalfOpen\", \"Open\", \"Ahegao\", \"Moan\",\n * \"TonguePinch\", \"LipBite\", \"Happy\", \"Devious\", \"Laughing\", \"Grin\", \"Smirk\", \"Pout\",\n */\n\n/**\n * The detection map used to match chunks of speech to a character's facial expression.\n * It's sorted by priority.\n */\nconst letterExpressionMap: { regex: RegExp; expr: [string | null, number] }[] = [\n  { regex: /[.?!\u2026~]/, expr: [null, 600] },\n  { regex: /[,;]/, expr: [null, 250] },\n  //Latin\n  { regex: /[a]/, expr: [\"Open\", 400] },\n  { regex: /[oeu]/, expr: [\"HalfOpen\", 300] },\n  { regex: /[bp]/, expr: [null, 200] },\n  { regex: /[mn]/, expr: [null, 500] },\n  { regex: /[ij]/, expr: [\"Smirk\", 400] },\n  { regex: /[kqrw]/, expr: [\"HalfOpen\", 300] },\n  { regex: /[fv]/, expr: [\"LipBite\", 300] },\n  { regex: /[cdt]/, expr: [\"TonguePinch\", 200] },\n  { regex: /[slz]/, expr: [\"TonguePinch\", 400] },\n  { regex: /[ghx]/, expr: [\"Angry\", 300] },\n  //Cyrillic\n  { regex: /[\u0430\u044F]/, expr: [\"Open\", 400] },\n  { regex: /[\u043E\u0435\u0443\u0454\u044E]/, expr: [\"HalfOpen\", 300] },\n  { regex: /[\u0431\u043F]/, expr: [null, 200] },\n  { regex: /[\u043C\u043D]/, expr: [null, 500] },\n  { regex: /[\u0438\u0456\u0436\u0457\u044B]/, expr: [\"Smirk\", 400] },\n  { regex: /[y\u043A\u0440]/, expr: [\"HalfOpen\", 300] },\n  { regex: /[\u0444\u0432]/, expr: [\"LipBite\", 300] },\n  { regex: /[\u0446\u0434\u0442]/, expr: [\"TonguePinch\", 200] },\n  { regex: /[\u0441\u043B\u0437]/, expr: [\"TonguePinch\", 400] },\n  { regex: /[\u0433\u0445]/, expr: [\"Angry\", 300] }\n];\n\nexport class CharTalkModule extends BaseModule {\n  static doAnimateMouth: boolean = true;\n\n  Load(): void {\n    ChatRoomRegisterMessageHandler({\n      Description: \"Processes mouth moving on the client\",\n      Priority: 500,\n      Callback: (data, sender, msg, metadata) => {\n        if (data.Type == \"Chat\") {\n          CharTalkModule.charTalkHandle(sender, msg);\n          return false;\n        }\n      }\n    });\n\n    hookFunction(\n      \"CommonDrawAppearanceBuild\",\n      HookPriority.Observe,\n      (args, next) => {\n        const c: Character = args[0];\n\n        if (!CharTalkModule.animation?.[c.MemberNumber]) return next(args); // Skip hook execution if animation not running\n\n        const mouth = InventoryGet(c, \"Mouth\"); // Get mouth property\n\n        if (!mouth) return next(args);\n\n        if (!mouth.Property) mouth.Property = {};\n\n        const realExpression = mouth?.Property?.Expression || null; // Save the real expression\n\n        mouth.Property.Expression = CharTalkModule.currentExpression?.[c.MemberNumber] || null; // Override the expression for this function\n\n        const returnValue = next(args); // Call the hooked function\n\n        mouth.Property.Expression = realExpression; // Restore the real expression for further execution\n\n        return returnValue; // Preserve any possible return value\n      },\n      ModuleCategory.CharTalk\n    );\n  }\n\n  /**\n   * Gets the sent message, checks it for validity,\n   * then splits it in chunks and turns it into a list of expression changes\n   * before pushing them into the animator.\n   */\n  static animateSpeech(c: Character, msg: string) {\n    const chunks = CharTalkModule.chunkSubstr(msg, 3);\n\n    const animation = chunks.map((chunk) => {\n      const match = letterExpressionMap.find(({ regex }) => regex.test(chunk)) ?? { expr: [null, 200] };\n      return match.expr;\n    });\n\n    CharTalkModule.runExpressionAnimation(c, animation);\n  }\n\n  /**\n   * The list of expressions to animate with their duration.\n   */\n  static animation: { [characterNumber: number]: [ExpressionName, number][] } = {};\n  static currentExpression: { [characterNumber: number]: ExpressionName } = {};\n  static animationFrame = 0;\n\n  /**\n   * Runs animation by changing mouth expression every `step[1]`ms\n   */\n  static runExpressionAnimationStep(c: Character) {\n    if (!CharTalkModule.animation?.[c.MemberNumber]) return;\n\n    let step = CharTalkModule.animation[c.MemberNumber][CharTalkModule.animationFrame++];\n\n    CharTalkModule.setLocalMouthExpression(c, step?.[0]);\n\n    if (CharTalkModule.animationFrame < CharTalkModule.animation?.[c.MemberNumber].length) {\n      setTimeout(() => CharTalkModule.runExpressionAnimationStep(c), step[1]);\n    } else {\n      delete CharTalkModule.animation[c.MemberNumber];\n    }\n  }\n\n  static runExpressionAnimation(c: Character, list: any) {\n    if (CharTalkModule.animation?.[c.MemberNumber]) return; // Animation running, ignore\n\n    CharTalkModule.animation[c.MemberNumber] = list;\n    CharTalkModule.animationFrame = 0;\n\n    const mouth = InventoryGet(c, \"Mouth\")?.Property;\n\n    if (mouth?.Expression && CharTalkModule.animation[c.MemberNumber] !== null) {\n      // reset the mouth at the end\n      CharTalkModule.animation?.[c.MemberNumber].push([mouth?.Expression, 0]);\n    }\n\n    CharTalkModule.runExpressionAnimationStep(c);\n  }\n\n  /**\n   * Splits a string into chunks of \"size\" length\n   */\n  static chunkSubstr(str: string, size: number) {\n    const numChunks = Math.ceil(str.length / size);\n    const chunks = new Array(numChunks);\n\n    for (let i = 0, o = 0; i < numChunks; ++i, o += size) {\n      chunks[i] = str.substring(o, o + size);\n    }\n\n    return chunks;\n  }\n\n  static setLocalMouthExpression(c: Character, expressionName: ExpressionName) {\n    const mouth = InventoryGet(c, \"Mouth\");\n\n    if (expressionName != null && !mouth.Asset.Group.AllowExpression.includes(expressionName)) return;\n\n    CharTalkModule.currentExpression[c.MemberNumber] = expressionName;\n\n    CharacterRefresh(c, false);\n  }\n\n  static charTalkHandle = (c: Character, msg: string) => {\n    if (!PlayerStorage().GlobalModule.ResponsiveEnabled) return;\n    if (!PlayerStorage().GlobalModule.CharTalkEnabled) return;\n    if (!c) return;\n\n    const fIsSimpleChat = !!isSimpleChat(msg);\n\n    if (fIsSimpleChat && CharTalkModule.doAnimateMouth && c == Player && !ResponsesModule.isOrgasm) {\n      CharTalkModule.animateSpeech(c, msg);\n    } else if (fIsSimpleChat && CharTalkModule.doAnimateMouth && c != Player) {\n      CharTalkModule.animateSpeech(c, msg);\n    }\n\n    if (!fIsSimpleChat) {\n      CharTalkModule.doAnimateMouth = false;\n      return;\n    }\n\n    if (fIsSimpleChat && !CharTalkModule.doAnimateMouth) {\n      CharTalkModule.doAnimateMouth = true;\n      CharTalkModule.animateSpeech(c, msg);\n    }\n\n    if (ResponsesModule.isOrgasm) {\n      ResponsesModule.isOrgasm = false;\n    }\n  };\n}\n", "import { ExtraResponsesModel, ResponsesEntryModel } from \"../Models/Responses\";\nimport { PlayerStorage } from \"./Data\";\nimport { getCharacter, getRandomInt } from \"./Other\";\n\nexport function activityDeconstruct(dict: _ChatMessageDictionary): ActivityInfo | undefined {\n  let SourceCharacter, TargetCharacter, ActivityGroup, ActivityName;\n  for (let v of dict) {\n    if (v.TargetCharacter) TargetCharacter = { MemberNumber: v.TargetCharacter };\n    else if (v.SourceCharacter) SourceCharacter = { MemberNumber: v.SourceCharacter };\n    else if (v.FocusGroupName) ActivityGroup = v.FocusGroupName;\n    else if (v.ActivityName) ActivityName = v.ActivityName;\n  }\n  if (SourceCharacter === undefined || TargetCharacter === undefined || ActivityGroup === undefined || ActivityName === undefined)\n    return undefined;\n  return { SourceCharacter, TargetCharacter, ActivityGroup, ActivityName };\n}\n\nexport function isSimpleChat(msg: string) {\n  return (\n    msg.trim().length > 0 &&\n    ChatRoomTargetMemberNumber == -1 &&\n    !msg.startsWith(\"/\") &&\n    !msg.startsWith(\"(\") &&\n    !msg.startsWith(\"*\") &&\n    !msg.startsWith(\"!\") &&\n    !msg.startsWith(\".\") &&\n    !msg.startsWith(\"@\") &&\n    !msg.startsWith(\"http\")\n  );\n}\n\nexport function chatRoomAutoInterceptMessage(cur_msg: string, msg?: string, source?: Character) {\n  if (!msg) return;\n\n  const data = PlayerStorage().GlobalModule;\n  if (data.doMessageInterruption && isSimpleChat(cur_msg)) {\n    return chatRoomInterceptMessage(cur_msg, msg);\n  }\n\n  return chatRoomNormalMessage(msg);\n}\n\nexport function orgasmMessage() {\n  chatRoomAutoInterceptMessage(ElementValue(\"InputChat\"), typedMoan(\"orgasm\"), Player);\n}\n\nexport function leaveMessage() {\n  if (isSimpleChat(ElementValue(\"InputChat\"))) chatRoomAutoInterceptMessage(ElementValue(\"InputChat\"), \" \");\n}\n\nexport function activityMessage(dict: ActivityInfo, entry: ResponsesEntryModel | undefined) {\n  const source = getCharacter(dict.SourceCharacter.MemberNumber);\n  const response = typedResponse(entry?.responses);\n  const templatedResponse = replaceTemplate(response, source);\n\n  if (templatedResponse.trim()[0] == \"@\") {\n    return sendAction(templatedResponse.slice(1), source);\n  }\n\n  const finalMessage = templatedResponse/*  + moanDependingOnActivity(Player, entry?.responses, dict.ActivityName) */;\n\n  chatRoomAutoInterceptMessage(ElementValue(\"InputChat\"), finalMessage, source);\n}\n\nexport function sendAction(action: string, sender: Character | null = null) {\n  let msg = action;\n  const playerName = CharacterNickname(Player);\n\n  if (msg.trim()[0] !== \"@\") {\n    msg = playerName + \" \" + msg.trim();\n  } else {\n    msg = msg.slice(1);\n  }\n\n  ServerSend(\"ChatRoomChat\", {\n    Content: \"Beep\",\n    Type: \"Action\",\n    Dictionary: [\n      { Tag: 'Beep', Text: 'msg' },\n      { Tag: '\u53D1\u9001\u79C1\u804A', Text: 'msg' },\n      { Tag: '\u767C\u9001\u79C1\u804A', Text: 'msg' },\n      { Tag: 'Biep', Text: 'msg' },\n      { Tag: 'Sonner', Text: 'msg' },\n      { Tag: '\u0417\u0432\u0443\u043A\u043E\u0432\u043E\u0439 \u0441\u0438\u0433\u043D\u0430\u043B', Text: 'msg' },\n      { Tag: \"msg\", Text: msg }\n    ]\n  });\n}\n\nfunction chatRoomInterceptMessage(cur_msg: string, msg: string) {\n  if (!msg) return;\n  ElementValue(\"InputChat\", cur_msg + \"... \" + msg);\n  ChatRoomSendChat();\n}\n\nfunction chatRoomNormalMessage(msg: string) {\n  if (!msg) return;\n\n  let backupChatRoomTargetMemberNumber = ChatRoomTargetMemberNumber;\n  ChatRoomSetTarget(-1);\n  let oldmsg = ElementValue(\"InputChat\");\n\n  ElementValue(\"InputChat\", msg);\n  ChatRoomSendChat();\n  ElementValue(\"InputChat\", oldmsg);\n  ChatRoomSetTarget(backupChatRoomTargetMemberNumber);\n}\n\nfunction replaceTemplate(msg: string, source?: Character) {\n  const playerPronouns = CharacterPronounDescription(Player);\n  const playerName = CharacterNickname(Player);\n\n  const playerPronoun = playerPronouns === \"She/Her\" ? \"she\" : \"he\";\n  const playerPossessive = playerPronouns === \"She/Her\" ? \"her\" : \"his\";\n  const playerIntensive = playerPronouns === \"She/Her\" ? \"her\" : \"him\";\n\n  const sourcePronounItem = CharacterPronounDescription(source);\n  const sourceName = CharacterNickname(source);\n\n  const sourcePronoun = sourcePronounItem === \"She/Her\" ? \"she\" : \"he\";\n  const sourcePossessive = sourcePronounItem === \"She/Her\" ? \"her\" : \"his\";\n  const sourceIntensive =\n    sourceName === playerName ? (playerPronouns === \"She/Her\" ? \"herself\" : \"himself\") : sourcePronounItem === \"She/Her\" ? \"her\" : \"him\";\n\n  return msg\n    .replaceAll(/%TARGET%|Player/g, playerName)\n    .replaceAll(/%TARGET_PRONOUN%|Pronoun/g, playerPronoun)\n    .replaceAll(/%TARGET_POSSESIVE%|Possessive/g, playerPossessive)\n    .replaceAll(/%TARGET_INTENSIVE%|Intensive/g, playerIntensive)\n    .replaceAll(/%SOURCE%|Source/g, sourceName)\n    .replaceAll(/%SOURCE_PRONOUN%|SourcePronoun/g, sourcePronoun)\n    .replaceAll(/%SOURCE_POSSESIVE%|SourcePossessive/g, sourcePossessive)\n    .replaceAll(/%SOURCE_INTENSIVE%|SourceIntensive/g, sourceIntensive);\n}\n\nfunction randomResponse(key: string[]) {\n  const rnd = getRandomInt(key.length);\n\n  return key[rnd] as string;\n}\n\nfunction typedMoan(moanType: \"low\" | \"light\" | \"medium\" | \"hot\" | \"orgasm\") {\n  return randomResponse(PlayerStorage().ResponsesModule.extraResponses[moanType]);\n}\n\nfunction baseMoan(arousal: number | undefined) {\n  if (!arousal) return \"\";\n  let factor = Math.floor(arousal / 20);\n  if (factor < 1) return \"\"; // skip wnen arousal is >=0 && < 20. too low as for me.\n  if (factor > 4) return \"\"; // Skip when arousal is 100, cause that's orgasm\n  const Tkeys: (keyof ExtraResponsesModel)[] = [\"low\", \"low\", \"light\", \"medium\", \"hot\", \"hot\"];\n  let k = Tkeys[factor];\n\n  return typedMoan(k);\n}\n\nfunction typedResponse(responses: string[]) {\n  return randomResponse(responses);\n}\n\n/* function moanDependingOnActivity(C: Character, responses: string[] | undefined, act: string | undefined) {\n  if (!C?.ArousalSettings) return;\n  if (!responses) return;\n\n  const doAddMoans = PlayerStorage().GlobalModule.doAddMoansOnHighArousal;\n  if (!doAddMoans) return \"\";\n\n  let actFactor = C.ArousalSettings.Activity.find((_) => _.Name === act)?.Self;\n  if (!actFactor) return \"\";\n\n  let threthold1 = Math.max(10, (4 - actFactor) * 25);\n  let threthold2 = threthold1 + 40;\n  let arousal = C.ArousalSettings.Progress;\n\n  if (arousal <= threthold1) {\n    return \"\";\n  } else {\n    if (!baseMoan(arousal)) return \"\";\n    else {\n      return \"\u2665\" + baseMoan(arousal) + \"\u2665\";\n    }\n  }\n} */\n", "export function getCharacter(memberNumber?: number) {\n  return ChatRoomCharacter.find((c) => c.MemberNumber == memberNumber) ?? undefined;\n}\n\nexport function getRandomInt(max: number) {\n  return Math.floor(Math.random() * max);\n}\n\nexport function injectStyle(styleSrc: string, styleId: string) {\n  const checkStyle = !!document.getElementById(styleId);\n  if (checkStyle) return;\n\n  const styleElement = document.createElement(\"style\");\n  styleElement.id = styleId;\n  styleElement.appendChild(document.createTextNode(styleSrc));\n  document.head.appendChild(styleElement);\n}\n", "import bcMod from 'bondage-club-mod-sdk';\nimport { conErr } from './Console';\nimport { FullModName, MOD_VERSION_CAPTION, ModName, ModRepository } from './Definition';\nimport { getCharacter } from './Other';\n\nexport const SDK = bcMod.registerMod(\n  {\n    name: ModName,\n    fullName: FullModName,\n    version: MOD_VERSION_CAPTION,\n    repository: ModRepository\n  },\n  {\n    allowReplace: false\n  }\n);\n\nexport enum HookPriority {\n  Observe = 0,\n  AddBehavior = 1,\n  ModifyBehavior = 5,\n  OverrideBehavior = 10,\n  Top = 100\n}\n\nexport enum ModuleCategory {\n  Core = -1,\n  Global = 0,\n  Responses = 1,\n  Profiles = 2,\n  CharTalk = 3\n}\n\nconst patchedFunctions: Map<string, PatchedFunctionData> = new Map();\n\nfunction initPatchableFunction(target: string): PatchedFunctionData {\n  let result = patchedFunctions.get(target);\n  if (!result) {\n    result = {\n      name: target,\n      hooks: []\n    };\n    patchedFunctions.set(target, result);\n  }\n  return result;\n}\n\nexport function hookFunction(\n  target: string,\n  priority: number,\n  hook: import('../../.types/bcmodsdk').PatchHook,\n  module: ModuleCategory | null = null\n): () => void {\n  const data = initPatchableFunction(target);\n\n  if (data.hooks.some((h) => h.hook === hook)) {\n    conErr(`Duplicate hook for \"${target}\"`, hook);\n    return () => null;\n  }\n\n  const removeCallback = SDK.hookFunction(target, priority, hook as any);\n\n  data.hooks.push({\n    hook,\n    priority,\n    module,\n    removeCallback\n  });\n  data.hooks.sort((a, b) => b.priority - a.priority);\n  return removeCallback;\n}\n\nexport function patchFunction(target: string, patches: Record<string, string>): void {\n  SDK.patchFunction(target, patches);\n}\n\nexport function removeHookByModule(target: string, module: ModuleCategory): boolean {\n  const data = initPatchableFunction(target);\n\n  for (let i = data.hooks.length - 1; i >= 0; i--) {\n    if (data.hooks[i].module === module) {\n      data.hooks[i].removeCallback();\n      data.hooks.splice(i, 1);\n    }\n  }\n\n  return true;\n}\n\nexport function removeAllHooksByModule(module: ModuleCategory): boolean {\n  for (const data of patchedFunctions.values()) {\n    for (let i = data.hooks.length - 1; i >= 0; i--) {\n      if (data.hooks[i].module === module) {\n        data.hooks[i].removeCallback();\n        data.hooks.splice(i, 1);\n      }\n    }\n  }\n\n  return true;\n}\n\nexport function onActivity(\n  priority: any,\n  module: ModuleCategory,\n  callback: (data: any, sender: Character | undefined, msg: string, metadata: ChatMessageDictionary) => void\n) {\n  hookFunction(\n    'ChatRoomMessage',\n    priority,\n    (args, next) => {\n      let data = args[0];\n      let sender = getCharacter(data.Sender);\n      if (data.Type == 'Activity') callback(data, sender, data.Content, data.Dictionary);\n      next(args);\n    },\n    module\n  );\n}\n", "import { DebugMode } from \"./Definition\";\n\nconst STYLES = {\n  INFO: \"color: #32CCCC\",\n  LOG: \"color: #CCCC32\",\n  DEBUG: \"color: #9E4BCF\"\n};\n\nexport function conInfo(...args: any[]) {\n  if (typeof args[0] === \"string\") console.info(`%cBCR: ${args[0]}`, STYLES.INFO, ...args.slice(1));\n  else console.info(`%cBCR:`, STYLES.LOG, ...args);\n}\n\nexport function conLog(...args: any[]) {\n  if (typeof args[0] === \"string\") console.log(`%cBCR: ${args[0]}`, STYLES.LOG, ...args.slice(1));\n  else console.log(`%cBCR:`, STYLES.LOG, ...args);\n}\n\nexport function conWarn(...args: any[]) {\n  if (typeof args[0] === \"string\") console.warn(`%cBCR: ${args[0]}`, STYLES.LOG, ...args.slice(1));\n  else console.warn(`%cBCR: `, STYLES.LOG, ...args);\n}\n\nexport function conErr(...args: any[]) {\n  if (typeof args[0] === \"string\") console.error(`%cBCR: ${args[0]}`, STYLES.LOG, ...args.slice(1));\n  else console.error(`%cBCR:`, STYLES.LOG, ...args);\n}\n\nexport function conDebug(...args: any[]) {\n  if (DebugMode) {\n    if (typeof args[0] === \"string\") console.debug(`%cBCR: ${args[0]}`, STYLES.DEBUG, ...args.slice(1));\n    else console.debug(`%cBCR:`, STYLES.LOG, ...args);\n  }\n}\n", "import { BaseModule } from \"../Base/BaseModule\";\nimport { activityDeconstruct } from \"../Utilities/ChatMessages\";\nimport { activityHandle, leaveHandle, orgasmHandle } from \"../Utilities/Handlers\";\nimport { ResponsesEntryModel, ResponsesSettingsModel } from \"../Models/Responses\";\nimport { GuiResponses } from \"../Screens/Responses\";\nimport { Subscreen } from \"../Base/SettingDefinitions\";\nimport { conDebug } from \"../Utilities/Console\";\nimport { getDefaultResponsesEntries } from \"../Utilities/DefaultResponsesEntries\";\nimport { HookPriority, ModuleCategory, hookFunction, onActivity } from \"../Utilities/SDK\";\n\nexport class ResponsesModule extends BaseModule {\n  static isOrgasm: boolean = false; // Just for Char Talk stuff\n\n  get settings(): ResponsesSettingsModel {\n    return super.settings as ResponsesSettingsModel;\n  }\n\n  get settingsScreen(): Subscreen | null {\n    return GuiResponses;\n  }\n\n  get defaultSettings() {\n    return getDefaultResponsesEntries();\n  }\n\n  Load(): void {\n    onActivity(HookPriority.Observe, ModuleCategory.Responses, (data, sender, msg, metadata) => {\n      const dict = activityDeconstruct(metadata);\n      if (!dict) return;\n      let entry = this.getResponsesEntry(dict?.ActivityName, dict?.ActivityGroup);\n\n      activityHandle(dict, entry);\n      conDebug(dict);\n    });\n\n    //Leave Message\n    hookFunction(\n      \"ServerAccountBeep\",\n      HookPriority.AddBehavior,\n      (args, next) => {\n        let data = args[0];\n\n        if (!data.ChatRoomName || !ChatRoomData || data.BeepType !== \"Leash\") return next(args);\n        if (!Player.OnlineSharedSettings?.AllowPlayerLeashing) return next(args);\n\n        leaveHandle(data);\n        next(args);\n      },\n      ModuleCategory.Global\n    );\n\n    //Orgasm Handling\n    hookFunction(\n      \"ActivityOrgasmStart\",\n      HookPriority.Observe,\n      (args, next) => {\n        orgasmHandle(args[0] as Character);\n        next(args);\n      },\n      ModuleCategory.Global\n    );\n  }\n\n  Run(): void {}\n\n  getResponsesEntry(actName: string | undefined, grpName: string | undefined): ResponsesEntryModel | undefined {\n    return this.settings.mainResponses.find((ent) => ent.actName === actName && ent.groupName.includes(grpName));\n  }\n}\n", "import { ResponsesEntryModel } from \"../Models/Responses\";\nimport { ResponsesModule } from \"../Modules/Responses\";\nimport { activityMessage, leaveMessage, orgasmMessage } from \"./ChatMessages\";\nimport { PlayerStorage } from \"./Data\";\nimport { ModName } from \"./Definition\";\n\nconst doesBcxAllowsTalking = () => {\n  const isRuleWorking = (ruleName: string) => {\n    const rule = window.bcx.getModApi(ModName).getRuleState(ruleName);\n\n    switch (ruleName) {\n      case \"speech_forbid_open_talking\":\n        return rule.inEffect && rule.isEnforced;\n      case \"speech_limit_open_talking\":\n        return rule.inEffect && rule.isEnforced;\n      case \"speech_specific_sound\":\n        return rule.inEffect && rule.isEnforced && rule.customData.soundWhitelist;\n      case \"speech_mandatory_words\":\n        return rule.inEffect && rule.isEnforced && rule.customData.mandatoryWords;\n      default:\n        break;\n    }\n  };\n\n  if (\n    PlayerStorage().GlobalModule.doPreventMessageIfBcxBlock &&\n    (isRuleWorking(\"speech_forbid_open_talking\") ||\n      isRuleWorking(\"speech_limit_open_talking\") ||\n      isRuleWorking(\"speech_specific_sound\") ||\n      isRuleWorking(\"speech_mandatory_words\"))\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const orgasmHandle = (c: Character) => {\n  if (!PlayerStorage().GlobalModule.ResponsiveEnabled) return;\n  if (!PlayerStorage().GlobalModule.responsesEnabled) return;\n  if (CurrentScreen !== \"ChatRoom\" || !Player) return;\n  if (Player.MemberNumber !== c.MemberNumber) return;\n  if (!PlayerStorage().ResponsesModule.extraResponses.orgasm) return;\n  if (ActivityOrgasmRuined) return;\n  if (window.bcx && !doesBcxAllowsTalking()) return;\n\n  ResponsesModule.isOrgasm = true;\n  orgasmMessage();\n};\n\nexport const activityHandle = (dict: ActivityInfo, entry: ResponsesEntryModel) => {\n  if (!PlayerStorage().GlobalModule.ResponsiveEnabled) return;\n  if (!PlayerStorage().GlobalModule.responsesEnabled) return;\n  if (CurrentScreen !== \"ChatRoom\" || !Player) return;\n  if (dict.TargetCharacter.MemberNumber !== Player.MemberNumber) return;\n  if (!entry || !entry?.responses) return;\n  if (!entry.selfTrigger && dict.TargetCharacter.MemberNumber === dict.SourceCharacter.MemberNumber) return;\n  if (window.bcx && !doesBcxAllowsTalking()) return;\n\n  activityMessage(dict, entry);\n};\n\nexport const leaveHandle = (data: any) => {\n  if (!PlayerStorage().GlobalModule.ResponsiveEnabled) return;\n  if (!PlayerStorage().GlobalModule.doLeaveMessage) return;\n  if (CurrentScreen !== \"ChatRoom\" || !Player) return;\n  if (!(CurrentScreen == \"ChatRoom\" && ChatRoomData.Name != data.ChatRoomName)) return;\n  if (window.bcx && !doesBcxAllowsTalking()) return;\n\n  leaveMessage();\n};\n", "import { Setting } from \"../../.types/setting\";\nimport { GuiSubscreen } from \"../Base/BaseSetting\";\nimport { ResponsesEntryModel, ResponsesSettingsModel } from \"../Models/Responses\";\nimport { conDebug } from \"../Utilities/Console\";\nimport { getText } from \"../Translation\";\n\nexport class GuiResponses extends GuiSubscreen {\n  activityIndex: number = 0;\n  selfAllowed: boolean = false; // to not call ActivityCanBeDoneOnSelf() every draw call;\n  masterSet: boolean = false;\n  copiedEntry = <ResponsesEntryModel>{};\n\n  get name(): string {\n    return \"responses\";\n  }\n\n  get icon(): string {\n    return \"Icons/Chat.png\";\n  }\n\n  get settings(): ResponsesSettingsModel {\n    return super.settings as ResponsesSettingsModel;\n  }\n\n  get currentResponsesEntry(): ResponsesEntryModel | undefined {\n    let actName = this.currentAct()?.Name ?? \"\";\n    let groupName = this.currentGroup()?.Name ?? \"\";\n    let entry = this.getResponsesEntry(actName, groupName);\n    return entry;\n  }\n\n  get activities(): Activity[] {\n    if (!Player.FocusGroup) return [];\n    else\n      return AssetActivitiesForGroup(\"Female3DCG\", Player.FocusGroup.Name, \"any\").filter((a) =>\n        this.activityHasDictionaryText(this.getActivityLabelTag(a, Player.FocusGroup!))\n      );\n  }\n\n  get multipageStructure(): Setting[][] {\n    return [\n      [],\n      [\n        <Setting>{\n          type: \"text\",\n          id: \"extra_low\",\n          label: \"responses.setting.low_response.name\",\n          description: \"responses.setting.low_response.desc\",\n          setting: () => GuiResponses.stringListShow(this.settings?.extraResponses?.low),\n          setSetting: (val) => {\n            this.settings.extraResponses.low = GuiResponses.validateInput(val) ?? this.settings.extraResponses.low;\n          }\n        },\n        <Setting>{\n          type: \"text\",\n          id: \"extra_light\",\n          label: \"responses.setting.light_response.name\",\n          description: \"responses.setting.light_response.desc\",\n          setting: () => GuiResponses.stringListShow(this.settings?.extraResponses?.light),\n          setSetting: (val) => {\n            this.settings.extraResponses.light = GuiResponses.validateInput(val) ?? this.settings.extraResponses.light;\n          }\n        },\n        <Setting>{\n          type: \"text\",\n          id: \"extra_medium\",\n          label: \"responses.setting.medium_response.name\",\n          description: \"responses.setting.medium_response.desc\",\n          setting: () => GuiResponses.stringListShow(this.settings?.extraResponses?.medium),\n          setSetting: (val) => {\n            this.settings.extraResponses.medium = GuiResponses.validateInput(val) ?? this.settings.extraResponses.medium;\n          }\n        },\n        <Setting>{\n          type: \"text\",\n          id: \"extra_hot\",\n          label: \"responses.setting.hot_response.name\",\n          description: \"responses.setting.hot_response.desc\",\n          setting: () => GuiResponses.stringListShow(this.settings?.extraResponses?.hot),\n          setSetting: (val) => {\n            this.settings.extraResponses.hot = GuiResponses.validateInput(val) ?? this.settings.extraResponses.hot;\n          }\n        },\n        <Setting>{\n          type: \"text\",\n          id: \"extra_orgasm\",\n          label: \"responses.setting.orgasm_response.name\",\n          description: \"responses.setting.orgasm_response.desc\",\n          setting: () => GuiResponses.stringListShow(this.settings?.extraResponses?.orgasm),\n          setSetting: (val) => {\n            this.settings.extraResponses.orgasm = GuiResponses.validateInput(val) ?? this.settings.extraResponses.orgasm;\n          }\n        }\n      ]\n    ];\n  }\n\n  static validateInput = (input: string) => {\n    let raw = `[${input}]`;\n\n    const validateStringList = (input: any) => {\n      if (!Array.isArray(input)) return undefined;\n      if (!(input as any[]).every((_) => typeof _ === \"string\")) return undefined;\n      return input as string[];\n    };\n\n    try {\n      let data = JSON.parse(raw);\n      return validateStringList(data);\n    } catch (e) {\n      return undefined;\n    }\n  };\n\n  static stringListShow = (input: string[]) => {\n    if (!input || input.length === 0) return \"\";\n    let result = JSON.stringify(input);\n    return result.substring(1, result.length - 1);\n  };\n\n  static activityCanBeDoneOnSelf(activity: ActivityName, group: AssetGroupItemName): boolean {\n    const foundActivity = AssetAllActivities(Player.AssetFamily).find((act) => act.Name === activity);\n\n    return foundActivity?.TargetSelf\n      ? (typeof foundActivity.TargetSelf === \"boolean\" ? foundActivity.Target : foundActivity.TargetSelf).includes(group)\n      : false;\n  }\n\n  Load() {\n    if (!this.settings) conDebug(`Loading Responses GUI`);\n    super.Load();\n    ElementCreateTextArea(\"mainResponses\");\n\n    this.elementHide(\"mainResponses\");\n\n    CharacterAppearanceForceUpCharacter = Player.MemberNumber ?? -1;\n  }\n\n  Run() {\n    let prev = MainCanvas.textAlign;\n\n    MainCanvas.textAlign = \"left\";\n\n    super.Run();\n\n    if (PreferencePageCurrent == 1) {\n      // Draws all the available character zones\n      for (let Group of AssetGroup) {\n        if (Group.IsItem() && !Group.MirrorActivitiesFrom && AssetActivitiesForGroup(\"Female3DCG\", Group.Name).length)\n          DrawAssetGroupZone(Player, Group.Zone, 0.9, 50, 50, 1, \"#808080FF\", 3, this.getZoneColor(Group.Name));\n      }\n\n      if (Player.FocusGroup != null) {\n        let activity = this.activities[this.activityIndex ?? 0];\n        DrawAssetGroupZone(Player, Player.FocusGroup.Zone, 0.9, 50, 50, 1, \"cyan\");\n        MainCanvas.textAlign = \"center\";\n        DrawBackNextButton(\n          550,\n          this.getYPos(0),\n          600,\n          64,\n          this.getActivityLabel(activity, Player.FocusGroup),\n          \"White\",\n          \"\",\n          () => \"\",\n          () => \"\"\n        );\n        MainCanvas.textAlign = \"left\";\n        if (!!activity) {\n          let image = \"Assets/\" + Player.AssetFamily + \"/Activity/\" + activity.Name + \".png\";\n          if (activity.Name.indexOf(\"Item\") > -1) {\n            image = \"Icons/Dress.png\";\n          }\n          DrawImageResize(image, 1170, this.getYPos(0) - 28, 120, 120);\n          DrawEmptyRect(1170, this.getYPos(0) - 28, 120, 120, \"Black\", 2);\n          this.drawActivityOptions();\n        }\n      } else {\n        DrawText(getText(\"responses.text.select_zone\"), this.getXPos(0), this.getYPos(0), \"Black\", \"White\");\n      }\n    }\n\n    if (PreferencePageCurrent == 2) this.elementHide(\"mainResponses\");\n    MainCanvas.textAlign = prev;\n  }\n\n  Click() {\n    let tmp = GuiSubscreen.START_X;\n    GuiSubscreen.START_X = 550;\n    super.Click();\n\n    if (PreferencePageCurrent == 1) {\n      for (const Group of AssetGroup) {\n        if (Group.IsItem() && !Group.MirrorActivitiesFrom && AssetActivitiesForGroup(\"Female3DCG\", Group.Name).length) {\n          const Zone = Group.Zone.find((z) => DialogClickedInZone(Player, z, 0.9, 50, 50, 1));\n          if (Zone) {\n            // If we have selected group, first save data for it.\n            if (Player.FocusGroup) this.saveResponseEntry(this.currentResponsesEntry);\n            // If we clicked on selected group, we deselect it.\n            if (Player.FocusGroup === Group) return this.deselectEntry();\n            Player.FocusGroup = Group;\n            let activities = this.activities;\n            if (this.activityIndex >= activities.length) this.activityIndex = 0;\n            this.loadResponseEntry(this.currentResponsesEntry);\n          }\n        }\n      }\n\n      if (Player.FocusGroup != null) {\n        let activities = this.activities;\n        // Arousal activity control\n        if (MouseIn(this.getXPos(0), this.getYPos(0), 600, 64)) {\n          this.saveResponseEntry(this.currentResponsesEntry);\n          if (MouseX <= this.getXPos(0) + 300) this.activityIndex = (activities.length + this.activityIndex - 1) % activities.length;\n          else this.activityIndex = (this.activityIndex + 1) % activities.length;\n          this.loadResponseEntry(this.currentResponsesEntry);\n        }\n      }\n\n      this.handleActivityEntryClick();\n    }\n\n    GuiSubscreen.START_X = tmp;\n  }\n\n  Exit() {\n    this.saveResponseEntry(this.currentResponsesEntry);\n    ElementRemove(\"mainResponses\");\n\n    CharacterAppearanceForceUpCharacter = -1;\n    CharacterLoadCanvas(Player);\n    Player.FocusGroup = null;\n    super.Exit();\n  }\n\n  currentAct() {\n    return this.activities[this.activityIndex];\n  }\n\n  currentGroup() {\n    return Player.FocusGroup;\n  }\n\n  getZoneColor(groupName: string): string {\n    let hasConfiguration = this.settings?.mainResponses?.some((a) => a.groupName.includes(groupName));\n    return hasConfiguration ? \"#00FF0044\" : \"#80808044\";\n  }\n\n  getResponsesEntry(actName: string, grpName: string): ResponsesEntryModel | undefined {\n    return this.settings?.mainResponses?.find((a) => a.actName == actName && a.groupName.includes(grpName));\n  }\n\n  activityHasDictionaryText(KeyWord: string) {\n    if (!ActivityDictionary) ActivityDictionaryLoad();\n    if (!ActivityDictionary) return;\n\n    for (let D = 0; D < ActivityDictionary.length; D++) if (ActivityDictionary[D][0] == KeyWord) return true;\n    return false;\n  }\n\n  getActivityLabelTag(activity: Activity, group: AssetGroup) {\n    let groupName = group.Name as AssetGroupItemName;\n    if (Player.HasPenis()) {\n      if (groupName == \"ItemVulva\") groupName = \"ItemPenis\";\n      if (groupName == \"ItemVulvaPiercings\") groupName = \"ItemGlans\";\n    }\n\n    return `Label-ChatOther-${groupName}-${activity.Name}`;\n  }\n\n  getActivityLabel(activity: Activity, group: AssetGroup) {\n    if (!activity) return \"ACTIVITY NOT FOUND\";\n\n    let tag = this.getActivityLabelTag(activity, group);\n\n    return ActivityDictionaryText(tag);\n  }\n\n  deselectEntry() {\n    Player.FocusGroup = null;\n    this.elementHide(\"mainResponses\");\n  }\n\n  loadResponseEntry(entry: ResponsesEntryModel | undefined) {\n    this.elementSetValue(\"mainResponses\", GuiResponses.stringListShow(entry?.responses as string[]) ?? []);\n  }\n\n  saveResponseEntry(entry: ResponsesEntryModel | undefined) {\n    let responses = ElementValue(\"mainResponses\");\n    let merge: boolean;\n    let unmerge: boolean;\n    const validResponses = GuiResponses.validateInput(responses);\n\n    if (responses != \"\" && validResponses) {\n      if (!entry) entry = this.createEntryIfNeeded(entry);\n      if (!this.masterSet) {\n        merge = this.mergeEntry(entry, validResponses);\n        unmerge = this.unmergeEntry(entry, validResponses);\n      }\n\n      if (this.masterSet || !(merge || unmerge)) entry.responses = validResponses ?? entry.responses;\n\n      this.settings.mainResponses.sort((a, b) => a.actName.localeCompare(b.actName));\n    }\n  }\n\n  clearEntry(entry: ResponsesEntryModel) {\n    if (!entry) return;\n    let temp = this.settings?.mainResponses?.find((ent) => ent.actName === entry.actName && ent.groupName === entry.groupName);\n\n    if (temp?.groupName.length <= 1) {\n      this.settings.mainResponses = this.settings?.mainResponses.filter((a) => {\n        return !(a.actName == entry.actName && a.groupName == entry.groupName);\n      });\n    } else {\n      temp?.groupName?.splice(temp?.groupName?.indexOf(this.currentGroup()?.Name), 1);\n    }\n\n    this.elementSetValue(\"mainResponses\", []);\n  }\n\n  /**\n   * Get entry >\n   *\n   * find response that has same `actName`, that doesn't includes current `groupName` and responses are the same with current entry >\n   *\n   * push `groupName` to that response >\n   *\n   * clear current entry\n   */\n  mergeEntry(entry: ResponsesEntryModel, validResponses: string[]) {\n    // Responses we entered into Responses field\n    const stringifiedValidResponses = JSON.stringify(validResponses);\n\n    // Looking for entry to merge, if any\n    let mergingEntry = this.settings?.mainResponses?.find((ent) => {\n      return (\n        ent.actName == this.currentAct().Name && // Actions are same\n        !ent.groupName.includes(this.currentGroup().Name) && // Group array don't have selected group\n        (JSON.stringify(ent.responses) === stringifiedValidResponses || // Responses are the same\n          ent.selfTrigger === entry.selfTrigger) // Self trigger from current entry is same with one that we found\n      );\n    });\n\n    if (!mergingEntry) return false; // We didn't find entry that fullfils our needs. We don't need to merge\n\n    mergingEntry.groupName.push(this.currentGroup()?.Name);\n\n    const entr = this.settings?.mainResponses?.find((ent) => ent.actName === entry.actName && ent.groupName === entry.groupName);\n    entr?.groupName?.splice(entr?.groupName?.indexOf(this.currentGroup()?.Name), 1);\n\n    this.clearEntry(entry);\n    return true;\n  }\n\n  /**\n   * Get entry >\n   *\n   * find response that has same `actName`, that includes current `groupName` and responses are not the same with current entry >\n   *\n   * remove `groupName` from that response >\n   *\n   * create new entry with this data\n   */\n  unmergeEntry(entry: ResponsesEntryModel, validResponses: string[]) {\n    // Responses we entered into Responses field\n    const stringifiedCurrentResponses = JSON.stringify(validResponses);\n\n    // Looking for entry to unmerge, if any\n    let unmergingEntry = this.settings?.mainResponses?.find((ent) => {\n      return (\n        ent.actName == this.currentAct().Name && // Actions are same\n        Array.isArray(ent.groupName) && // Group name is type of array\n        ent.groupName.length > 1 && // Group array has more than one entry\n        ent.groupName.includes(this.currentGroup().Name) && // Group array has selected group\n        (JSON.stringify(ent.responses) !== stringifiedCurrentResponses || // Responses are not the same\n          ent.selfTrigger !== entry.selfTrigger) // Self trigger from current entry not same with one that we found\n      );\n    });\n\n    if (!unmergingEntry) return false; // We didn't find entry that fullfils our needs. We don't need to unmerge\n\n    unmergingEntry.groupName.splice(unmergingEntry.groupName.indexOf(this.currentGroup()?.Name), 1);\n\n    const newEntry = this.createNewEntry(this.currentAct().Name, this.currentGroup().Name, validResponses, entry.selfTrigger);\n    this.settings.mainResponses.push(newEntry);\n\n    return true;\n  }\n\n  createNewEntry(actName: string, grpName: string, responses?: string[], selfTrigger?: boolean): ResponsesEntryModel {\n    return <ResponsesEntryModel>{\n      actName: actName,\n      groupName: [grpName],\n      responses: responses ?? [\"\"],\n      selfTrigger: selfTrigger ?? false\n    };\n  }\n\n  createEntryIfNeeded(existing: ResponsesEntryModel | undefined): ResponsesEntryModel {\n    if (!existing) {\n      existing = this.createNewEntry(this.currentAct()?.Name, this.currentGroup()?.Name ?? \"\");\n      this.settings.mainResponses.push(existing);\n      this.loadResponseEntry(this.currentResponsesEntry);\n    }\n\n    return existing;\n  }\n\n  copyEntry(entry: ResponsesEntryModel | undefined) {\n    this.copiedEntry = entry as ResponsesEntryModel;\n  }\n\n  pasteEntry(entry: ResponsesEntryModel | undefined) {\n    if (Object.keys(this.copiedEntry).length === 0) return;\n    if (!entry) entry = this.createEntryIfNeeded(entry);\n\n    entry.responses = this.copiedEntry.responses ?? [\"\"];\n    this.loadResponseEntry(entry);\n    if (GuiResponses.activityCanBeDoneOnSelf(this.currentAct()?.Name, this.currentGroup()?.Name))\n      entry.selfTrigger = this.copiedEntry.selfTrigger;\n  }\n\n  handleActivityEntryClick() {\n    let entry = this.currentResponsesEntry;\n    this.selfAllowed = GuiResponses.activityCanBeDoneOnSelf(this.currentAct()?.Name, this.currentGroup()?.Name);\n\n    // Clear Entry\n    if (!!entry && MouseIn(1310, this.getYPos(0), 64, 64)) {\n      this.clearEntry(entry);\n    }\n\n    if (MouseIn(1385, this.getYPos(0), 64, 64)) {\n      this.copyEntry(entry);\n    }\n\n    if (MouseIn(1455, this.getYPos(0), 64, 64)) {\n      this.pasteEntry(entry);\n    }\n\n    // Self Allowed Checkbox\n    if (MouseIn(this.getXPos(2) + 600, this.getYPos(2) - 32, 64, 64) && this.selfAllowed) {\n      entry = this.createEntryIfNeeded(entry);\n      entry.selfTrigger = !entry.selfTrigger;\n    }\n\n    // Master Set Checkbox\n    if (MouseIn(this.getXPos(8) + 600, this.getYPos(8) - 32, 64, 64)) {\n      this.masterSet = !this.masterSet;\n    }\n  }\n\n  drawActivityOptions() {\n    let activityEntry = this.currentResponsesEntry;\n\n    if (!!activityEntry) {\n      MainCanvas.textAlign = \"center\";\n      DrawButton(1310, this.getYPos(0), 64, 64, \"X\", \"White\", undefined, getText(\"responses.text.clear_entry\"));\n      MainCanvas.textAlign = \"left\";\n    }\n\n    MainCanvas.textAlign = \"center\";\n    DrawButton(1385, this.getYPos(0), 64, 64, \"\", \"White\", undefined, getText(\"responses.text.copy_entry\"));\n    DrawImageResize(\"Icons/Export.png\", 1385, this.getYPos(0), 64, 64);\n    MainCanvas.textAlign = \"left\";\n\n    MainCanvas.textAlign = \"center\";\n    DrawButton(1455, this.getYPos(0), 64, 64, \"\", \"White\", undefined, getText(\"responses.text.paste_entry\"));\n    DrawImageResize(\"Icons/Import.png\", 1455, this.getYPos(0), 64, 64);\n    MainCanvas.textAlign = \"left\";\n\n    // Self Allowed Checkbox\n    this.drawCheckbox(\n      \"responses.setting.self_trigger.name\",\n      \"responses.setting.self_trigger.desc\",\n      activityEntry?.selfTrigger ?? false,\n      2,\n      !this.selfAllowed\n    );\n\n    // Master Set Checkbox\n    this.drawCheckbox(\"responses.setting.master_set.name\", \"responses.setting.master_set.desc\", this.masterSet ?? false, 8);\n\n    this.elementPosition(\"mainResponses\", \"responses.setting.responses.name\", \"responses.setting.responses.desc\", 3, false);\n  }\n\n  elementSetValue(elementId: string, value: any) {\n    let element = document.getElementById(elementId) as HTMLInputElement;\n    if (!!element && value != null) element.value = value;\n  }\n\n  elementPosition(elementId: string, label: string, description: string, order: number, disabled: boolean = false) {\n    var isHovering = MouseIn(this.getXPos(order), this.getYPos(order) - 32, 600, 64);\n    const isValid = !!GuiResponses.validateInput(ElementValue(elementId));\n\n    DrawTextFit(\n      isValid ? `${getText(label)}` : `${getText(label)} \u2716`,\n      this.getXPos(order),\n      this.getYPos(order),\n      600,\n      isHovering ? \"Red\" : \"Black\",\n      \"Gray\"\n    );\n\n    ElementPosition(elementId, this.getXPos(order) + 750 + 225, this.getYPos(order), 800, 64);\n    if (disabled) ElementSetAttribute(elementId, \"disabled\", \"true\");\n    if (!disabled) document.getElementById(elementId)?.removeAttribute(\"disabled\");\n    if (isHovering) this.tooltip(getText(description));\n  }\n}\n", "import { ResponsesSettingsModel } from \"../Models/Responses\";\n\nconst DefaultResponses = {\n  pain: [\"Aie!\", \"Aoouch!\", \"Aaaaie!\", \"Ouch\", \"Aow\"],\n  tickle: [\"Hahaha!\", \"Mmmmhahaha!\", \"Muhahah...\", \"Ha!Ha!\"],\n  boop: [\"Eek!\", \"Beep!\", \"Aww..\"],\n\n  low: [\"\", \"\", \"mh\", \"\u2665oh\u2665\", \"ah\", \"...\u2665\"],\n  light: [\"ah\u2665\", \"Aah!\", \"mh\", \"oh!\u2665\", \"mh\u2665\"],\n  medium: [\"mm\", \"aaaah\", \"Mm.. Ah\u2665\"],\n  hot: [\"nh... ah\u2665\", \"Oooh\", \"mmmmmh!\", \"HaaA\u2665\"],\n  orgasm: [\"Mh...Mn...HaaAAaah!\", \"Mmmmh... MMmh... Hhhmmmm...\", \"Oooooh... Mmmmh... OooOOOOh!\", \"Mmmhnn... Nyhmm... aah!\"]\n};\n\nconst setData = (key: string) => {\n  let oldSettings = null;\n  //@ts-ignore\n  if (Player?.OnlineSettings?.BCResponsive?.data) {\n    oldSettings = JSON.parse(\n      //@ts-ignore\n      LZString.decompressFromBase64(Player?.OnlineSettings?.BCResponsive?.data)\n    );\n  }\n\n  return oldSettings ? (oldSettings?.[key] ? oldSettings?.[key] : DefaultResponses[key]) : DefaultResponses[key];\n};\n\nexport function getDefaultResponsesEntries() {\n  return <ResponsesSettingsModel>{\n    mainResponses: [\n      {\n        actName: \"Pet\",\n        groupName: [\"ItemNose\"],\n        responses: setData(\"boop\"),\n        selfTrigger: false\n      },\n      {\n        actName: \"LSCG_SharkBite\",\n        groupName: [\"ItemNose\"],\n        responses: setData(\"boop\"),\n        selfTrigger: false\n      },\n      {\n        actName: \"Slap\",\n        groupName: [\"ItemVulva\", \"ItemVulvaPiercings\", \"ItemBreast\", \"ItemHead\"],\n        responses: setData(\"pain\"),\n        selfTrigger: true\n      },\n      {\n        actName: \"Bite\",\n        groupName: [\n          \"ItemFeet\",\n          \"ItemLegs\",\n          \"ItemButt\",\n          \"ItemTorso\",\n          \"ItemTorso2\",\n          \"ItemNipples\",\n          \"ItemBreast\",\n          \"ItemArms\",\n          \"ItemHands\",\n          \"ItemNeck\",\n          \"ItemMouth\",\n          \"ItemNose\",\n          \"ItemEars\",\n          \"ItemBoots\"\n        ],\n        responses: setData(\"pain\"),\n        selfTrigger: true\n      },\n      {\n        actName: \"Spank\",\n        groupName: [\"ItemFeet\", \"ItemLegs\", \"ItemButt\", \"ItemPelvis\", \"ItemTorso\", \"ItemTorso2\", \"ItemArms\", \"ItemHands\", \"ItemBoots\"],\n        responses: setData(\"pain\"),\n        selfTrigger: true\n      },\n      {\n        actName: \"Kick\",\n        groupName: [\"ItemFeet\", \"ItemLegs\", \"ItemVulva\", \"ItemVulvaPiercings\", \"ItemButt\", \"ItemBoots\"],\n        responses: setData(\"pain\")\n      },\n      {\n        actName: \"Pinch\",\n        groupName: [\"ItemButt\", \"ItemPelvis\", \"ItemNipples\", \"ItemArms\", \"ItemMouth\", \"ItemNose\", \"ItemEars\"],\n        responses: setData(\"pain\"),\n        selfTrigger: true\n      },\n      {\n        actName: \"SpankItem\",\n        groupName: [\n          \"ItemFeet\",\n          \"ItemLegs\",\n          \"ItemVulva\",\n          \"ItemVulvaPiercings\",\n          \"ItemButt\",\n          \"ItemPelvis\",\n          \"ItemTorso\",\n          \"ItemNipples\",\n          \"ItemBreast\",\n          \"ItemArms\",\n          \"ItemBoots\"\n        ],\n        responses: setData(\"pain\"),\n        selfTrigger: true\n      },\n      {\n        actName: \"ShockItem\",\n        groupName: [\n          \"ItemFeet\",\n          \"ItemLegs\",\n          \"ItemVulva\",\n          \"ItemVulvaPiercings\",\n          \"ItemButt\",\n          \"ItemPelvis\",\n          \"ItemTorso\",\n          \"ItemNipples\",\n          \"ItemBreast\",\n          \"ItemArms\",\n          \"ItemNeck\",\n          \"ItemNeckAccessories\",\n          \"ItemBoots\"\n        ],\n        responses: setData(\"pain\"),\n        selfTrigger: true\n      },\n      {\n        actName: \"LSCG_SharkBite\",\n        groupName: [\n          \"ItemFeet\",\n          \"ItemLegs\",\n          \"ItemButt\",\n          \"ItemTorso\",\n          \"ItemNipples\",\n          \"ItemBreast\",\n          \"ItemArms\",\n          \"ItemHands\",\n          \"ItemNeck\",\n          \"ItemEars\",\n          \"ItemBoots\"\n        ],\n        responses: setData(\"pain\")\n      },\n      {\n        actName: \"Tickle\",\n        groupName: [\"ItemFeet\", \"ItemLegs\", \"ItemPelvis\", \"ItemTorso\", \"ItemTorso2\", \"ItemBreast\", \"ItemArms\", \"ItemNeck\", \"ItemBoots\"],\n        responses: setData(\"tickle\")\n      },\n      {\n        actName: \"TickleItem\",\n        groupName: [\n          \"ItemFeet\",\n          \"ItemLegs\",\n          \"ItemVulva\",\n          \"ItemVulvaPiercings\",\n          \"ItemButt\",\n          \"ItemPelvis\",\n          \"ItemTorso\",\n          \"ItemNipples\",\n          \"ItemBreast\",\n          \"ItemArms\",\n          \"ItemNeck\",\n          \"ItemMouth\",\n          \"ItemNose\",\n          \"ItemHood\",\n          \"ItemEars\",\n          \"ItemBoots\"\n        ],\n        responses: setData(\"tickle\")\n      }\n    ],\n    extraResponses: {\n      low: setData(\"low\"),\n      light: setData(\"light\"),\n      medium: setData(\"medium\"),\n      hot: setData(\"hot\"),\n      orgasm: setData(\"orgasm\")\n    }\n  };\n}\n", "import { BaseModule } from \"../Base/BaseModule\";\nimport { Subscreen } from \"../Base/SettingDefinitions\";\nimport { GlobalSettingsModel } from \"../Models/Base\";\nimport { GuiGlobal } from \"../Screens/Global\";\n\nexport class GlobalModule extends BaseModule {\n  get settingsScreen(): Subscreen | null {\n    return GuiGlobal;\n  }\n\n  get settings(): GlobalSettingsModel {\n    return super.settings as GlobalSettingsModel;\n  }\n\n  get defaultSettings() {\n    return <GlobalSettingsModel>{\n      ResponsiveEnabled: true,\n      responsesEnabled: true,\n      CharTalkEnabled: true,\n      doShowNewVersionMessage: true,\n      doLeaveMessage: true,\n      //doAddMoansOnHighArousal: true,\n      doPreventMessageIfBcxBlock: false,\n      doMessageInterruption: true\n    };\n  }\n\n  Load(): void { }\n\n  Run(): void { }\n}\n", "import { Setting } from \"../../.types/setting\";\nimport { GuiSubscreen } from \"../Base/BaseSetting\";\nimport { GlobalSettingsModel } from \"../Models/Base\";\n\nexport class GuiGlobal extends GuiSubscreen {\n  get name(): string {\n    return \"settings\";\n  }\n\n  get icon(): string {\n    return \"Icons/Preference.png\";\n  }\n\n  get settings(): GlobalSettingsModel {\n    return super.settings as GlobalSettingsModel;\n  }\n\n  get structure(): Setting[] {\n    return [\n      <Setting>{\n        type: \"checkbox\",\n        label: \"settings.setting.responsive_enabled.name\",\n        description: \"settings.setting.responsive_enabled.desc\",\n        setting: () => this.settings?.ResponsiveEnabled ?? true,\n        setSetting: (val) => (this.settings.ResponsiveEnabled = val)\n      },\n      <Setting>{\n        type: \"checkbox\",\n        label: \"settings.setting.responsesEnabled.name\",\n        description: \"settings.setting.responsesEnabled.desc\",\n        setting: () => this.settings?.responsesEnabled ?? true,\n        setSetting: (val) => (this.settings.responsesEnabled = val)\n      },\n      <Setting>{\n        type: \"checkbox\",\n        label: \"settings.setting.chartalk_enabled.name\",\n        description: \"settings.setting.chartalk_enabled.desc\",\n        setting: () => this.settings?.CharTalkEnabled ?? true,\n        setSetting: (val) => (this.settings.CharTalkEnabled = val)\n      },\n      <Setting>{\n        type: \"checkbox\",\n        label: \"settings.setting.interruption_enabled.name\",\n        description: \"settings.setting.interruption_enabled.desc\",\n        setting: () => this.settings?.doMessageInterruption ?? true,\n        setSetting: (val) => (this.settings.doMessageInterruption = val)\n      },\n      <Setting>{\n        type: \"checkbox\",\n        label: \"settings.setting.leave_message_enabled.name\",\n        description: \"settings.setting.leave_message_enabled.desc\",\n        setting: () => this.settings?.doLeaveMessage ?? true,\n        setSetting: (val) => (this.settings.doLeaveMessage = val)\n      },\n      /* <Setting>{\n        type: \"checkbox\",\n        label: \"settings.setting.doAddMoansOnHighArousal.name\",\n        description: \"settings.setting.doAddMoansOnHighArousal.desc\",\n        setting: () => this.settings?.doAddMoansOnHighArousal ?? true,\n        setSetting: (val) => (this.settings.doAddMoansOnHighArousal = val)\n      }, */\n      <Setting>{\n        type: \"checkbox\",\n        label: \"settings.setting.doPreventMessageIfBcxBlock.name\",\n        description: \"settings.setting.doPreventMessageIfBcxBlock.desc\",\n        setting: () => this.settings?.doPreventMessageIfBcxBlock ?? false,\n        setSetting: (val) => (this.settings.doPreventMessageIfBcxBlock = val)\n      },\n      <Setting>{\n        type: \"checkbox\",\n        label: \"settings.setting.new_version_message_enabled.name\",\n        description: \"settings.setting.new_version_message_enabled.desc\",\n        setting: () => this.settings?.doShowNewVersionMessage ?? true,\n        setSetting: (val) => (this.settings.doShowNewVersionMessage = val)\n      }\n    ];\n  }\n\n  Load(): void {\n    super.Load();\n  }\n}\n", "import { BaseModule } from \"../Base/BaseModule\";\nimport { Subscreen } from \"../Base/SettingDefinitions\";\nimport { ProfilesSettingsModel } from \"../Models/Profiles\";\nimport { GuiProfiles } from \"../Screens/Profiles\";\n\nexport class ProfilesModule extends BaseModule {\n  get settings(): ProfilesSettingsModel {\n    return super.settings as ProfilesSettingsModel;\n  }\n\n  get settingsScreen(): Subscreen | null {\n    return GuiProfiles;\n  }\n\n  get defaultSettings() {\n    return <ProfilesSettingsModel>{};\n  }\n\n  Load(): void {}\n\n  Run(): void {}\n}\n", "import { GuiSubscreen } from \"../Base/BaseSetting\";\nimport { ProfileEntryModel, ProfileNames, ProfileSaveModel, ProfilesSettingsModel } from \"../Models/Profiles\";\nimport { conWarn } from \"../Utilities/Console\";\nimport { getText } from \"../Translation\";\nimport { PlayerStorage } from \"../Utilities/Data\";\n\nexport class GuiProfiles extends GuiSubscreen {\n  private PreferenceText = \"\";\n  private ProfileNames: ProfileNames = [\"\", \"\", \"\"];\n\n  get name(): string {\n    return \"profiles\";\n  }\n\n  get icon(): string {\n    return \"Icons/Title.png\";\n  }\n\n  get settings(): ProfilesSettingsModel {\n    return super.settings as ProfilesSettingsModel;\n  }\n\n  tmpGlbl = GuiSubscreen.START_X;\n\n  Load() {\n    super.Load();\n\n    for (let i = 0; i < 3; i++) {\n      let profileIndex = i + 1;\n      if (!PlayerStorage()?.ProfilesModule?.[profileIndex]) {\n        PlayerStorage().ProfilesModule[profileIndex] = {\n          data: <ProfileSaveModel>{},\n          name: \"\"\n        };\n      }\n      this.ProfileNames[i] = PlayerStorage()?.ProfilesModule?.[profileIndex]?.name ?? \"\";\n    }\n\n    CharacterAppearanceForceUpCharacter = Player.MemberNumber ?? -1;\n  }\n\n  Run() {\n    let prev = MainCanvas.textAlign;\n    super.Run();\n    MainCanvas.textAlign = \"left\";\n\n    for (let i = 0; i < 3; i++) {\n      let profileIndex = i + 1;\n\n      if (this.ProfileNames[i] === \"\")\n        DrawText(getText(\"profiles.text.profile\") + ` ${profileIndex}`, this.getXPos(profileIndex), this.getYPos(profileIndex), \"Black\", \"Gray\");\n      if (this.ProfileNames[i] !== \"\")\n        DrawText(this.ProfileNames[i] as string, this.getXPos(profileIndex), this.getYPos(profileIndex), \"Black\", \"Gray\");\n\n      this.drawButton(\"profiles.button.save\", \"white\", profileIndex, 250);\n      this.drawButton(\"profiles.button.load\", \"white\", profileIndex, 500);\n      this.drawButton(\"profiles.button.delete\", \"IndianRed\", profileIndex, 750);\n    }\n\n    if (this.PreferenceText)\n      DrawText(this.PreferenceText, GuiSubscreen.START_X + 250, GuiSubscreen.START_Y - GuiSubscreen.Y_MOD, \"Black\", \"Gray\");\n\n    MainCanvas.textAlign = prev;\n  }\n\n  Click() {\n    super.Click();\n\n    for (let i = 0; i < 3; i++) {\n      let profileIndex = i + 1;\n\n      this.handleProfilesSaving(profileIndex);\n      this.handleProfilesLoading(profileIndex);\n      this.handleProfilesDeleting(profileIndex);\n    }\n  }\n\n  Exit() {\n    CharacterAppearanceForceUpCharacter = -1;\n    CharacterLoadCanvas(Player);\n    this.PreferenceText = \"\";\n    super.Exit();\n  }\n\n  saveProfile(profileId: number, profileName: string) {\n    if (profileId < 1 || profileId > 3) {\n      conWarn(`Invalid profile id ${profileId}`);\n      return false;\n    }\n\n    if (!Object.keys(PlayerStorage()?.ProfilesModule?.[profileId]).length) {\n      PlayerStorage().ProfilesModule[profileId] = <ProfileEntryModel>{};\n    }\n\n    let saveData: ProfileSaveModel = {\n      GlobalModule: PlayerStorage().GlobalModule,\n      ResponsesModule: PlayerStorage().ResponsesModule\n    };\n\n    PlayerStorage().ProfilesModule[profileId] = {\n      name: profileName,\n      data: saveData\n    };\n\n    return true;\n  }\n\n  loadProfile(profileId: number) {\n    if (profileId < 1 || profileId > 3) {\n      conWarn(`Invalid profile id ${profileId}`);\n      return false;\n    }\n\n    if (!Object.keys(PlayerStorage()?.ProfilesModule?.[profileId]).length) {\n      return false;\n    }\n\n    let data = PlayerStorage().ProfilesModule[profileId].data;\n    if (!data) {\n      return false;\n    }\n\n    if (data) {\n      PlayerStorage().GlobalModule = data.GlobalModule;\n      PlayerStorage().ResponsesModule = data.ResponsesModule;\n    }\n\n    return true;\n  }\n\n  deleteProfile(profileId: number) {\n    if (profileId < 1 || profileId > 3) {\n      conWarn(`Invalid profile id ${profileId}`);\n      return false;\n    }\n\n    if (!Object.keys(PlayerStorage()?.ProfilesModule?.[profileId]).length) {\n      return false;\n    }\n\n    if (Object.keys(PlayerStorage()?.ProfilesModule?.[profileId]).length) {\n      PlayerStorage().ProfilesModule[profileId] = <ProfileEntryModel>{};\n      return true;\n    }\n  }\n\n  handleProfilesSaving(profileIndex: number) {\n    let formerIndex = profileIndex - 1;\n    if (MouseIn(this.getXPos(profileIndex) + 250, this.getYPos(profileIndex) - 32, 200, 64)) {\n      let promptedName = prompt(getText(\"profiles.prompt\"));\n\n      if (promptedName === null) return;\n      this.ProfileNames[formerIndex] = promptedName;\n      if (this.ProfileNames[formerIndex] === \"\") {\n        this.saveProfile(profileIndex, \"\");\n        this.PreferenceText = `${getText(\"profiles.text.profile\")} ${profileIndex} ${getText(\"profiles.text.has_been_saved\")}`;\n      }\n      if (this.ProfileNames[formerIndex] !== \"\") {\n        this.saveProfile(profileIndex, this.ProfileNames[formerIndex] as string);\n        this.PreferenceText = `${getText(\"profiles.text.profile\")} \"${this.ProfileNames[formerIndex]}\" ${getText(\n          \"profiles.text.has_been_saved\"\n        )}`;\n      }\n      return;\n    }\n  }\n\n  handleProfilesLoading(profileIndex: number) {\n    let formerIndex = profileIndex - 1;\n    if (MouseIn(this.getXPos(profileIndex) + 500, this.getYPos(profileIndex) - 32, 200, 64)) {\n      if (!this.loadProfile(profileIndex)) {\n        this.PreferenceText = `${getText(\"profiles.text.profile\")} ${profileIndex} ${getText(\"profiles.text.needs_to_be_saved\")}`;\n        return;\n      }\n      if (this.ProfileNames[formerIndex] === \"\")\n        this.PreferenceText = `${getText(\"profiles.text.profile\")} ${profileIndex} ${getText(\"profiles.text.has_been_loaded\")}`;\n      if (this.ProfileNames[formerIndex] !== \"\")\n        this.PreferenceText = `${getText(\"profiles.text.profile\")} \"${this.ProfileNames[formerIndex]}\" ${getText(\n          \"profiles.text.has_been_loaded\"\n        )}`;\n      return;\n    }\n  }\n\n  handleProfilesDeleting(profileIndex: number) {\n    let formerIndex = profileIndex - 1;\n    if (MouseIn(this.getXPos(profileIndex) + 750, this.getYPos(profileIndex) - 32, 200, 64)) {\n      if (this.ProfileNames[formerIndex] === null) return;\n\n      if (this.deleteProfile(profileIndex)) {\n        if (this.ProfileNames[formerIndex] === \"\") {\n          this.PreferenceText = `${getText(\"profiles.text.profile\")} ${profileIndex} ${getText(\"profiles.text.has_been_deleted\")}`;\n          return;\n        }\n        if (this.ProfileNames[formerIndex] !== \"\") {\n          this.PreferenceText = `${getText(\"profiles.text.profile\")} \"${this.ProfileNames[formerIndex]}\" ${getText(\n            \"profiles.text.has_been_deleted\"\n          )}`;\n          this.ProfileNames[formerIndex] = \"\";\n          return;\n        }\n      }\n\n      if (!this.deleteProfile(profileIndex)) {\n        this.PreferenceText = `${getText(\"profiles.text.profile\")} ${profileIndex} ${getText(\"profiles.text.not_saved_or_already_deleted\")}`;\n        return;\n      }\n      return;\n    }\n  }\n}\n", "import { BaseModule } from \"../Base/BaseModule\";\nimport { PlayerStorage } from \"../Utilities/Data\";\nimport { BCR_NEW_VERSION, sendLocalSmart } from \"../Utilities/Messages\";\nimport { HookPriority, ModuleCategory, hookFunction } from \"../Utilities/SDK\";\n\nexport class VersionModule extends BaseModule {\n  static isItNewVersion: boolean = false;\n\n  Load(): void {\n    hookFunction(\n      \"ChatRoomSync\",\n      HookPriority.Observe,\n      (args, next) => {\n        next(args);\n        VersionModule.sendNewVersionMessage();\n      },\n      ModuleCategory.Global\n    );\n  }\n\n  Run(): void {}\n\n  static isNewVersion(current: string | undefined, candidate: string) {\n    if (current !== undefined) {\n      const CURRENT_ = current.split(\".\"),\n        CANDIDATE_ = candidate.split(\".\");\n      for (let i = 0; i < 3; i++) {\n        if (CURRENT_[i] === CANDIDATE_[i]) {\n          continue;\n        }\n        return CANDIDATE_[i] > CURRENT_[i];\n      }\n    }\n    if (current === undefined || current === \"\" || !current) {\n      return true;\n    }\n    return false;\n  }\n\n  static sendNewVersionMessage() {\n    if (PlayerStorage().GlobalModule.doShowNewVersionMessage && VersionModule.isItNewVersion) {\n      sendLocalSmart(\"ResponsiveNewVersion\", BCR_NEW_VERSION);\n    }\n  }\n\n  static saveVersion() {\n    if (PlayerStorage()) {\n      PlayerStorage().Version = MOD_VERSION;\n    }\n  }\n\n  static loadVersion() {\n    if (PlayerStorage()?.Version) {\n      return PlayerStorage().Version;\n    }\n    return;\n  }\n\n  static checkIfNewVersion() {\n    let LoadedVersion = VersionModule.loadVersion();\n    if (VersionModule.isNewVersion(LoadedVersion, MOD_VERSION)) {\n      VersionModule.isItNewVersion = true;\n    }\n    VersionModule.saveVersion();\n  }\n}\n", "import { CMD_BCR, CMD_CHANGELOG, CMD_DEBUG_DATA, CMD_TOGGLE, CMD_VERSION, MOD_VERSION_CAPTION } from './Definition';\n\n//TODO - Translation\n\nexport const BCR_CMDS = /*html*/ `\n  <div class=\"ResponsiveMessageContent\">\n    <b style='color:#440171; text-shadow: 0.05em 0.05em #690092;'>BC Responsive</b>: Available commands (Clickable)\n    <br><a class=\"ResponsiveText\" onClick='window.CommandSet(\"${CMD_TOGGLE}\")'>Toggle Responsive</a>\n    <br><a class=\"ResponsiveText\" onClick='window.CommandSet(\"${CMD_CHANGELOG}\")'>Show Changelog</a>\n    <br><a class=\"ResponsiveText\" onClick='window.CommandSet(\"${CMD_VERSION}\")'>Show Version</a><br>\n    <br><a class=\"ResponsiveText\" onClick='window.CommandSet(\"${CMD_DEBUG_DATA}\")'>Debug Data</a><br>\n    <br><a href='https://github.com/dDeepLb/BC-Responsive/wiki' target='_blank'><b>Open Wiki</b></a>\n  </div>\n  `;\n\nexport const BCR_NEW_VERSION = /*html*/ `\n  <div class='ResponsiveMessageContent'>\n    <b style='color:#690092; text-shadow: 0.05em 0.05em #440171;'>BC Responsive</b><b>: New Version!</b> [${MOD_VERSION_CAPTION}]<br>\n    <br><b style='color:#CC3232; text-shadow: 0.05em 0.05em #920009;'>Please, reload your page~</b><br>\n    <br><a class=\"ResponsiveText\" onClick='window.CommandSet(\"${CMD_CHANGELOG}\")'><b>Changelog (Click)</b></a>\n    <br><a class=\"ResponsiveText\" onClick='window.CommandSet(\"${CMD_BCR}\")'><b>Show Help (Click)</b></a>\n  </div>\n `;\n\nexport const BCR_VERSION_MSG = /*html*/ `\n  <p class='ResponsiveMessageContent'>Current version of <b style='color:#690092; text-shadow: 0.05em 0.05em #440171;'>BC Responsive: v${MOD_VERSION_CAPTION}</b></p>\n  `;\n\nexport const BCR_TOGGLE_ENABLED = /*html*/ `\n    <p class='ResponsiveMessageContent'><b>BC Responsive</b> has been enabled</p>\n    `;\n\nexport const BCR_TOGGLE_DISABLED = /*html*/ `\n    <p class='ResponsiveMessageContent'><b>BC Responsive</b> has been disabled</p>\n    `;\n\nexport const BCR_CHANGELOG = /*html*/ `\n  <div class=\"ResponsiveMessageContent\">\n    <b class=\"ResponsiveVersion\">0.6.5</b>\n    <br>\u2022 Move mod button to Extensions Settings. Preferences > Extensions > Responsive Settings.\n    <br>\u2022 Fixed crash in some cases by automating data repairing.<br>\n\n    <b class=\"ResponsiveVersion\">0.6.4</b>\n    <br>\u2022 Fixed Character Talk wasn't working.<br>\n\n    <b class=\"ResponsiveVersion\">0.6.3</b>\n    <br>\u2022 Fixed bug introduced in R104.\n    <br>\u2022 Removed feature to add moans on high arousal.<br>\n  </div>\n\n  <br><a href='https://github.com/dDeepLb/BC-Responsive/wiki/Full-Changelog' target='_blank'><b>Full Changelog (Click)</b></a>\n  `;\n\nexport function sendLocalSmart(id: string, message: string, timeoutInSeconds?: number) {\n  const div = document.createElement('div');\n  div.id = id;\n  div.setAttribute('class', 'ChatMessage ResponsiveMessage');\n  div.setAttribute('data-time', ChatRoomCurrentTime());\n  div.setAttribute('data-sender', Player?.MemberNumber + '');\n\n  div.innerHTML =\n    message.replaceAll('\\n\\t', '') +\n    /*html*/ `<br><a class=\"ResponsiveText\" onClick='document.getElementById(\"${id}\").remove();'><b>Close (Click)</b></a>`;\n\n  ChatRoomAppendChat(div);\n  if (!timeoutInSeconds) return;\n  setTimeout(() => div?.remove(), timeoutInSeconds * 1000);\n}\n", "import { PlayerStorage } from \"./Data\";\nimport { CMD_BCR, MT } from \"./Definition\";\nimport { BCR_CHANGELOG, BCR_CMDS, BCR_TOGGLE_DISABLED, BCR_TOGGLE_ENABLED, BCR_VERSION_MSG, sendLocalSmart } from \"./Messages\";\n\nexport function loadCommands() {\n  CommandCombine({\n    Tag: CMD_BCR,\n    Description: \": To open the Responsive commands overview.\",\n    Action: (args: string, command: string, parsed: string[]) => {\n      switch (args) {\n        case \"toggle\":\n          const data = PlayerStorage().GlobalModule;\n          data.ResponsiveEnabled = !data.ResponsiveEnabled;\n          if (data.ResponsiveEnabled) {\n            sendLocalSmart(\"bcr_toggle_enb\", BCR_TOGGLE_ENABLED, MT.INFO);\n          }\n          if (!data.ResponsiveEnabled) {\n            sendLocalSmart(\"bcr_toggle_dis\", BCR_TOGGLE_DISABLED, MT.INFO);\n          }\n          break;\n\n        case \"changelog\":\n          sendLocalSmart(\"bcr_clog\", BCR_CHANGELOG);\n          break;\n\n        case \"version\":\n          sendLocalSmart(\"bcr_ver\", BCR_VERSION_MSG, MT.INFO);\n          break;\n\n        case \"debug-data\":\n          navigator.clipboard.writeText(LZString.compressToBase64(JSON.stringify(Player.Responsive)));\n          break;\n\n        default:\n          sendLocalSmart(\"bcr_cmds\", BCR_CMDS, MT.COMMANDS);\n          break;\n      }\n    }\n  });\n}\n"],
  "mappings": "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",
  "names": ["o", "e", "t", "n", "r", "i", "a", "c", "l", "d", "g", "s", "p", "bcMod", "input"]
}
